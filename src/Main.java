import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.URISyntaxException;
import java.net.URL;
import java.net.URLConnection;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.time.Year;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.Timer;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Saksham
 */
public class Main extends javax.swing.JFrame {
    
    //Global Declaration:

    //Title Icon:
    InputStream imageInputStream = getClass().getResourceAsStream("Images/TitleIcon.png");
    BufferedImage bufferedImage;
    
    {
        try {
            this.bufferedImage = ImageIO.read(imageInputStream);
        } catch (IOException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
    } 

    //Icons:
    ImageIcon exitIcon = new ImageIcon(getClass().getResource("/Images/EXITPLOGO1.png"));
    ImageIcon successIcon = new ImageIcon(getClass().getResource("/Images/SuccessIcon.png"));
    ImageIcon errorIcon = new ImageIcon(getClass().getResource("/Images/ErrorIcon.png"));
    ImageIcon warningIcon = new ImageIcon(getClass().getResource("/Images/WarningIcon.png"));
    ImageIcon noIntenertIcon = new ImageIcon(getClass().getResource("/Images/NoInternetIcon.png"));
    ImageIcon detailsSavedIcon = new ImageIcon(getClass().getResource("/Images/DetailsSavedIcon.png"));
    ImageIcon wrongDateIcon = new ImageIcon(getClass().getResource("/Images/WrongDateIcon.png"));
    ImageIcon numberError = new ImageIcon(getClass().getResource("/Images/MobileNumberError.png"));

    //Global Variables:
    boolean flag = false;
    
    //Global Thread:
    Thread t1;
    Thread t3;

       
    /**
     * Creates new form Main
     */
    public Main(String name, String email) throws ParseException {
        if(name.equals("") && email.equals("")){
            name = "Saksham Chauhan";
            email = "adidrcool@gmail.com";
        }
        
        initComponents();      
        myinitComponents(name, email);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GenderGroup = new javax.swing.ButtonGroup();
        NumberVerification = new javax.swing.JDialog();
        NoInternet = new javax.swing.JDialog();
        SavingAnimation = new javax.swing.JDialog();
        DetailsPanel = new javax.swing.JPanel();
        LogoLabel = new javax.swing.JLabel();
        WelcomeLabel = new javax.swing.JLabel();
        Logout = new javax.swing.JLabel();
        HeadingLabel = new javax.swing.JLabel();
        NameLabel = new javax.swing.JLabel();
        EmailLabel = new javax.swing.JLabel();
        GenderLabel = new javax.swing.JLabel();
        NameField = new javax.swing.JTextField();
        EmailField = new javax.swing.JTextField();
        MRadioButton = new javax.swing.JRadioButton();
        FRadioButton = new javax.swing.JRadioButton();
        ORadioButton = new javax.swing.JRadioButton();
        DOBLabel = new javax.swing.JLabel();
        CountryLabel = new javax.swing.JLabel();
        CountryComboBox = new javax.swing.JComboBox<>();
        NumberLabel = new javax.swing.JLabel();
        DatePicker = new com.toedter.calendar.JDateChooser();
        NumberField = new javax.swing.JTextField();
        InstructionLabel1 = new javax.swing.JLabel();
        Next = new javax.swing.JButton();
        Exit = new javax.swing.JButton();
        Background = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        NumberVerification.setMinimumSize(new java.awt.Dimension(1200, 650));
        NumberVerification.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        NumberVerification.setUndecorated(true);

        javax.swing.GroupLayout NumberVerificationLayout = new javax.swing.GroupLayout(NumberVerification.getContentPane());
        NumberVerification.getContentPane().setLayout(NumberVerificationLayout);
        NumberVerificationLayout.setHorizontalGroup(
            NumberVerificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1200, Short.MAX_VALUE)
        );
        NumberVerificationLayout.setVerticalGroup(
            NumberVerificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 658, Short.MAX_VALUE)
        );

        NoInternet.setBackground(new java.awt.Color(255, 255, 255));
        NoInternet.setMinimumSize(new java.awt.Dimension(1200, 650));
        NoInternet.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        NoInternet.setUndecorated(true);

        javax.swing.GroupLayout NoInternetLayout = new javax.swing.GroupLayout(NoInternet.getContentPane());
        NoInternet.getContentPane().setLayout(NoInternetLayout);
        NoInternetLayout.setHorizontalGroup(
            NoInternetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1200, Short.MAX_VALUE)
        );
        NoInternetLayout.setVerticalGroup(
            NoInternetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 650, Short.MAX_VALUE)
        );

        SavingAnimation.setBackground(new java.awt.Color(255, 255, 255));
        SavingAnimation.setMinimumSize(new java.awt.Dimension(1200, 720));
        SavingAnimation.setUndecorated(true);

        javax.swing.GroupLayout SavingAnimationLayout = new javax.swing.GroupLayout(SavingAnimation.getContentPane());
        SavingAnimation.getContentPane().setLayout(SavingAnimationLayout);
        SavingAnimationLayout.setHorizontalGroup(
            SavingAnimationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1200, Short.MAX_VALUE)
        );
        SavingAnimationLayout.setVerticalGroup(
            SavingAnimationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 720, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1200, 720));
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(1200, 720));

        DetailsPanel.setBackground(new java.awt.Color(51, 51, 51));
        DetailsPanel.setMaximumSize(new java.awt.Dimension(1200, 720));
        DetailsPanel.setMinimumSize(new java.awt.Dimension(1200, 720));
        DetailsPanel.setPreferredSize(new java.awt.Dimension(1200, 720));
        DetailsPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        LogoLabel.setBackground(new java.awt.Color(51, 51, 51));
        LogoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LogoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/NewIcon.png"))); // NOI18N
        LogoLabel.setOpaque(true);
        DetailsPanel.add(LogoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 0, 106, 70));

        WelcomeLabel.setFont(new java.awt.Font("Arial", 0, 26)); // NOI18N
        WelcomeLabel.setForeground(new java.awt.Color(255, 255, 255));
        WelcomeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        DetailsPanel.add(WelcomeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 0, 400, 70));

        Logout.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/LOGOUT.png"))); // NOI18N
        Logout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LogoutMouseClicked(evt);
            }
        });
        DetailsPanel.add(Logout, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 10, 50, 60));

        HeadingLabel.setBackground(new java.awt.Color(204, 204, 204));
        HeadingLabel.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        HeadingLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        HeadingLabel.setText("Enter your Details:");
        DetailsPanel.add(HeadingLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 70, 400, 90));

        NameLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        NameLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        NameLabel.setText("Name:");
        DetailsPanel.add(NameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 180, 100, 40));

        EmailLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        EmailLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        EmailLabel.setText("Email:");
        DetailsPanel.add(EmailLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 240, 100, 40));

        GenderLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        GenderLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        GenderLabel.setText("Gender:");
        DetailsPanel.add(GenderLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 300, 100, 40));

        NameField.setEditable(false);
        NameField.setFont(new java.awt.Font("Arial", 0, 17)); // NOI18N
        DetailsPanel.add(NameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 180, 270, 40));

        EmailField.setEditable(false);
        EmailField.setFont(new java.awt.Font("Arial", 0, 17)); // NOI18N
        DetailsPanel.add(EmailField, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 240, 270, 40));

        GenderGroup.add(MRadioButton);
        MRadioButton.setFont(new java.awt.Font("Arial", 0, 17)); // NOI18N
        MRadioButton.setSelected(true);
        MRadioButton.setText("Male");
        MRadioButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        DetailsPanel.add(MRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 300, 170, 40));

        GenderGroup.add(FRadioButton);
        FRadioButton.setFont(new java.awt.Font("Arial", 0, 17)); // NOI18N
        FRadioButton.setText("Female");
        FRadioButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        DetailsPanel.add(FRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 340, 170, 40));

        GenderGroup.add(ORadioButton);
        ORadioButton.setFont(new java.awt.Font("Arial", 0, 17)); // NOI18N
        ORadioButton.setText("Non-Binary");
        ORadioButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        DetailsPanel.add(ORadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 380, 170, 40));

        DOBLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        DOBLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        DOBLabel.setText("Date of Birth:");
        DetailsPanel.add(DOBLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 180, 220, 40));

        CountryLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        CountryLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        CountryLabel.setText("Country of residence:");
        DetailsPanel.add(CountryLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 240, 220, 40));

        CountryComboBox.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        CountryComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Afghanistan (AF)", "Albania (AL)", "Algeria (DZ)", "American Samoa (AS)", "Andorra (AD)", "Angola (AO)", "Anguilla (AI)", "Antigua (AG)", "Argentina (AR)", "Armenia (AM)", "Aruba (AW)", "Australia (AU)", "Austria (AT)", "Azerbaijan (AZ)", "The Bahamas (BS)", "Bahrain (BH)", "Bangladesh (BD)", "Barbados (BB)", "Belarus (BY)", "Belgium (BE)", "Belize (BZ)", "Benin (BJ)", "Bermuda (BM)", "Bhutan (BT)", "Bolivia (BO)", "Bosnia and Herzegovina (BA)", "Botswana (BW)", "Brazil (BR)", "British Indian Ocean Territory (IO)", "Brunei (BN)", "Bulgaria (BG)", "Burkina Faso (BF)", "Burundi (BI)", "Cambodia (KH)", "Cameroon (CM)", "Canada (CA)", "Cape Verde (CV)", "Cayman Islands (KY)", "Central African Republic (CF)", "Chad (TD)", "Chile (CL)", "China (CN)", "Colombia (CO)", "Comoros (KM)", "Republic of the Congo (CG)", "Democratic Republic of Congo (CD)", "Cook Islands (CK)", "Costa Rica (CR)", "CÃ´te d'Ivoire (CI)", "Croatia (HR)", "Cuba (CU)", "Cyprus (CY)", "Czech Republic (CZ)", "Denmark (DK)", "Djibouti (DJ)", "Dominica (DM)", "Dominican Republic (DO)", "Ecuador (EC)", "Egypt (EG)", "El Salvador (SV)", "Equatorial Guinea (GQ)", "Eritrea (ER)", "Estonia (EE)", "Ethiopia (ET)", "Falkland Islands (FK)", "Faroe Islands (FO)", "Fiji (FJ)", "Finland (FI)", "France (FR)", "French Guiana (GF)", "French Polynesia (PF)", "Gabon (GA)", "The Gambia (GM)", "Georgia (GE)", "Germany (DE)", "Ghana (GH)", "Gibraltar (GI)", "Greece (GR)", "Greenland (GL)", "Grenada (GD)", "Guadeloupe (GP)", "Guam (GU)", "Guatemala (GT)", "Guinea (GN)", "Guinea-Bissau (GW)", "Guyana (GY)", "Haiti (HT)", "Vatican City (VA)", "Honduras (HN)", "Hong Kong (HK)", "Hungary (HU)", "Iceland (IS)", "India (IN)", "Indonesia (ID)", "Iran (IR)", "Iraq (IQ)", "Ireland (IE)", "Israel (IL)", "Italy (IT)", "Jamaica (JM)", "Japan (JP)", "Jordan (JO)", "Kazakhstan (KZ)", "Kenya (KE)", "Kiribati (KI)", "South Korea (KR)", "Kuwait (KW)", "Kyrgyzstan (KG)", "Laos (LA)", "Latvia (LV)", "Lebanon (LB)", "Lesotho (LS)", "Liberia (LR)", "Libya (LY)", "Liechtenstein (LI)", "Lithuania (LT)", "Luxembourg (LU)", "Macau (MO)", "Macedonia (MK)", "Madagascar (MG)", "Malawi (MW)", "Malaysia (MY)", "Maldives (MV)", "Mali (ML)", "Malta (MT)", "Marshall Islands (MH)", "Martinique (MQ)", "Mauritania (MR)", "Mauritius (MU)", "Mayotte (YT)", "Mexico (MX)", "Federated States of Micronesia (FM)", "Moldova (MD)", "Monaco (MC)", "Mongolia (MN)", "Montenegro (ME)", "Montserrat (MS)", "Morocco (MA)", "Mozambique (MZ)", "Burma Myanmar (MM)", "Namibia (NA)", "Nauru (NR)", "Nepal (NP)", "Netherlands (NL)", "Netherlands Antilles (AN)", "New Caledonia (NC)", "New Zealand (NZ)", "Nicaragua (NI)", "Niger (NE)", "Nigeria (NG)", "Niue (NU)", "Norfolk Island (NF)", "Northern Mariana Islands (MP)", "Norway (NO)", "Oman (OM)", "Pakistan (PK)", "Palau (PW)", "Palestine (PS)", "Panama (PA)", "Papua New Guinea (PG)", "Paraguay (PY)", "Peru (PE)", "Philippines (PH)", "Poland (PL)", "Portugal (PT)", "Puerto Rico (PR)", "Qatar (QA)", "RÃ©union (RE)", "Romania (RO)", "Russia (RU)", "Rwanda (RW)", "Saint BarthÃ©lemy (BL)", "Saint Helena (SH)", "Saint Kitts and Nevis (KN)", "St. Lucia (LC)", "Saint Martin (MF)", "Saint Pierre and Miquelon (PM)", "Saint Vincent and the Grenadines (VC)", "Samoa (WS)", "San Marino (SM)", "SÃ£o TomÃ© and PrÃ­ncipe (ST)", "Saudi Arabia (SA)", "Senegal (SN)", "Serbia (RS)", "Seychelles (SC)", "Sierra Leone (SL)", "Singapore (SG)", "Slovakia (SK)", "Slovenia (SI)", "Solomon Islands (SB)", "Somalia (SO)", "South Africa (ZA)", "Spain (ES)", "Sri Lanka (LK)", "Sudan (SD)", "Suriname (SR)", "Swaziland (SZ)", "Sweden (SE)", "Switzerland (CH)", "Syria (SY)", "Taiwan (TW)", "Tajikistan (TJ)", "Tanzania (TZ)", "Thailand (TH)", "Timor-Leste (TL)", "Togo (TG)", "Tokelau (TK)", "Tonga (TO)", "Trinidad and Tobago (TT)", "Tunisia (TN)", "Turkey (TR)", "Turkmenistan (TM)", "Turks and Caicos Islands (TC)", "Tuvalu (TV)", "Uganda (UG)", "Ukraine (UA)", "United Arab Emirates (AE)", "United Kingdom (GB)", "United States (US)", "Uruguay (UY)", "US Virgin Islands (VI)", "Uzbekistan (UZ)", "Vanuatu (VU)", "Venezuela (VE)", "Vietnam (VN)", "Wallis and Futuna (WF)", "Yemen (YE)", "Zambia (ZM)", "Zimbabwe (ZW)" }));
        CountryComboBox.setSelectedIndex(92);
        CountryComboBox.setToolTipText("Drop down menu for selection of country of residence.");
        CountryComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        DetailsPanel.add(CountryComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 240, 210, 40));

        NumberLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        NumberLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        NumberLabel.setText("Phone number:");
        DetailsPanel.add(NumberLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 300, 220, 40));

        DatePicker.setBackground(new java.awt.Color(0, 0, 0));
        DatePicker.setDate(new java.util.Date());
        DatePicker.setDateFormatString("dd.MM.yyyy");
        DatePicker.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        DatePicker.setIcon(new javax.swing.ImageIcon("C:\\Users\\Saksham\\Downloads\\CalenderIcon.png"));
        DatePicker.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                DatePickerKeyPressed(evt);
            }
        });
        DetailsPanel.add(DatePicker, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 180, 210, 40));

        NumberField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        NumberField.setForeground(new java.awt.Color(102, 102, 102));
        NumberField.setText("Enter Phone Number");
        NumberField.setToolTipText(" Press Enter after completion.");
        NumberField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                NumberFieldFocusGained(evt);
            }
        });
        NumberField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                NumberFieldKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                NumberFieldKeyTyped(evt);
            }
        });
        DetailsPanel.add(NumberField, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 300, 210, 40));

        InstructionLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        InstructionLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        InstructionLabel1.setText("*Number should be of country of residence.");
        DetailsPanel.add(InstructionLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 340, 290, -1));

        Next.setFont(new java.awt.Font("Arial", 1, 25)); // NOI18N
        Next.setForeground(new java.awt.Color(255, 255, 255));
        Next.setText("NEXT");
        Next.setToolTipText("Next Button");
        Next.setBorder(null);
        Next.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Next.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                NextMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                NextMouseExited(evt);
            }
        });
        Next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextActionPerformed(evt);
            }
        });
        DetailsPanel.add(Next, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 610, 200, 50));

        Exit.setBackground(new java.awt.Color(0, 0, 0));
        Exit.setFont(new java.awt.Font("Arial", 1, 25)); // NOI18N
        Exit.setForeground(new java.awt.Color(255, 255, 255));
        Exit.setText("EXIT");
        Exit.setToolTipText("Exit Button");
        Exit.setBorder(null);
        Exit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ExitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ExitMouseExited(evt);
            }
        });
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        DetailsPanel.add(Exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 610, 190, 50));

        Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/BACKGROUND3.jpg"))); // NOI18N
        Background.setToolTipText("");
        Background.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        DetailsPanel.add(Background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 1200, 650));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/AlphaWhiteLogoNN.png"))); // NOI18N
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        DetailsPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 15, 300, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(DetailsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(DetailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        // TODO add your handling code here:      
        JLabel label = new JLabel("Are you sure you want to exit?");
        label.setFont(new Font("Arial", Font.BOLD, 15));
        String title = "Exit";
        int run = JOptionPane.showConfirmDialog(null, label, title, 
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, exitIcon);
        if(run == 0){
            System.exit(0);
        }   
    }//GEN-LAST:event_ExitActionPerformed

    private void NextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextActionPerformed
        // TODO add your handling code here:
        startNext();    
    }//GEN-LAST:event_NextActionPerformed

    private void LogoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogoutMouseClicked
        // TODO add your handling code here:
        Login login = new Login("");
        login.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_LogoutMouseClicked

    private void NumberFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NumberFieldKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            startNext();
        }
    }//GEN-LAST:event_NumberFieldKeyPressed

    private void NumberFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_NumberFieldFocusGained
        // TODO add your handling code here:
        if(NumberField.getText().equals("Enter Phone Number")){
            NumberField.setText("");
            NumberField.setForeground(Color.BLACK);
            NumberField.setFont(new Font("Arial", Font.PLAIN, 17));
        }
        
    }//GEN-LAST:event_NumberFieldFocusGained

    private void NumberFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NumberFieldKeyTyped
        // TODO add your handling code here:
        if(NumberField.getText().length() < 15){
            char c = evt.getKeyChar();
            if (!((c >= '0') && (c <= '9') || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) {
                InstructionLabel1.setText("Only numeric input supported.");
                Timer timer = new Timer(2000,
                                e -> InstructionLabel1.setText("*Number should be of country of residence."));
                timer.setRepeats(false);
                timer.start();
                getToolkit().beep();
                evt.consume();
            }
        }else{
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_NumberFieldKeyTyped

    private void ExitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitMouseEntered
        // TODO add your handling code here:
        Exit.setFont(new Font("Arial", Font.BOLD, 30));
    }//GEN-LAST:event_ExitMouseEntered

    private void ExitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitMouseExited
        // TODO add your handling code here:
        Exit.setFont(new Font("Arial", Font.BOLD, 25));
    }//GEN-LAST:event_ExitMouseExited

    private void NextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NextMouseEntered
        // TODO add your handling code here:
        Next.setFont(new Font("Arial", Font.BOLD, 30));
    }//GEN-LAST:event_NextMouseEntered

    private void NextMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NextMouseExited
        // TODO add your handling code here:
        Next.setFont(new Font("Arial", Font.BOLD, 25));
    }//GEN-LAST:event_NextMouseExited

    private void DatePickerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DatePickerKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            
            NumberField.requestFocusInWindow();
            
        }
    }//GEN-LAST:event_DatePickerKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                try {
                    new Main("", "").setVisible(true);
                } catch (ParseException ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Background;
    private javax.swing.JComboBox<String> CountryComboBox;
    private javax.swing.JLabel CountryLabel;
    private javax.swing.JLabel DOBLabel;
    private com.toedter.calendar.JDateChooser DatePicker;
    private javax.swing.JPanel DetailsPanel;
    private javax.swing.JTextField EmailField;
    private javax.swing.JLabel EmailLabel;
    private javax.swing.JButton Exit;
    private javax.swing.JRadioButton FRadioButton;
    private javax.swing.ButtonGroup GenderGroup;
    private javax.swing.JLabel GenderLabel;
    private javax.swing.JLabel HeadingLabel;
    private javax.swing.JLabel InstructionLabel1;
    private javax.swing.JLabel LogoLabel;
    private javax.swing.JLabel Logout;
    private javax.swing.JRadioButton MRadioButton;
    private javax.swing.JTextField NameField;
    private javax.swing.JLabel NameLabel;
    private javax.swing.JButton Next;
    private javax.swing.JDialog NoInternet;
    private javax.swing.JTextField NumberField;
    private javax.swing.JLabel NumberLabel;
    private javax.swing.JDialog NumberVerification;
    private javax.swing.JRadioButton ORadioButton;
    private javax.swing.JDialog SavingAnimation;
    private javax.swing.JLabel WelcomeLabel;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

    private void myinitComponents(String n, String e) throws ParseException {

        this.setIconImage(bufferedImage);
        this.setTitle("Details Window");
        Next.setBackground(new java.awt.Color(0,0,0,0));
        Exit.setBackground(new java.awt.Color(0,0,0,0));
        WelcomeLabel.setText("Welcome, " + n);
        NameField.setBackground(new java.awt.Color(0,0,0,0));
        NameField.setText(n);
        EmailField.setBackground(new java.awt.Color(0,0,0,0));
        EmailField.setText(e);
        MRadioButton.setBackground(new java.awt.Color(0,0,0,0));
        FRadioButton.setBackground(new java.awt.Color(0,0,0,0));
        ORadioButton.setBackground(new java.awt.Color(0,0,0,0));
        CountryComboBox.setBackground(new java.awt.Color(0,0,0,0));
        NumberField.setBackground(new java.awt.Color(0,0,0,0));
        DatePicker.setBackground(new java.awt.Color(0,0,0,0));
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2,dim.height/2-this.getSize().height/2);
        NoInternet.setLocation(dim.width/2-this.getSize().width/2,(dim.height/2-this.getSize().height/2)+70);
        NumberVerification.setLocation(dim.width/2-this.getSize().width/2,(dim.height/2-this.getSize().height/2)+70);
        
    }

    private boolean checkDate() {
        Date date = DatePicker.getDate();  
        Date d = new Date();
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy");  
        int year = Integer.parseInt(formatter.format(date));
        int y = Year.now().getValue();
        if(year > y || date.after(d) ){
            
            JLabel label = new JLabel("Come on, be realistic. You ain't from Future. ;)");       
            label.setFont(new Font("Arial", Font.BOLD, 15));
            String title = "Error";
            JOptionPane.showMessageDialog(null, label, title, JOptionPane.WARNING_MESSAGE, wrongDateIcon);
            DatePicker.requestFocusInWindow();
            return false;
            
        }else if(year <= 1900){
            
            JLabel label = new JLabel("Really? You can't be that old.");       
            label.setFont(new Font("Arial", Font.BOLD, 15));
            String title = "Error";
            JOptionPane.showMessageDialog(null, label, title, JOptionPane.WARNING_MESSAGE, wrongDateIcon);
            DatePicker.requestFocusInWindow();
            return false;
            
        }else{
            return true;
        }
    }  

    private boolean checkNumber() {
        String number = NumberField.getText();
        number = number.trim();
        if(number.isEmpty() || number.equals("Enter Phone Number") ){
            JLabel label = new JLabel("Phone number can not empty.");       
            label.setFont(new Font("Arial", Font.BOLD, 15));
            String title = "Error";
            JOptionPane.showMessageDialog(null, label, title, JOptionPane.WARNING_MESSAGE, numberError);
            NumberField.setText("");
            NumberField.requestFocusInWindow();
            return false;
        }else{
            return true;
        }
    }
    
    private void startVerification(String number) {
        
        number = number.trim();

        //Getting country code from Country ComboBox.
        String str = (String) CountryComboBox.getSelectedItem();
        int index = str.indexOf("(");
        String country_code = str.substring(index+1, index+3);

        String access_key = "cf9fb051b51ac25f4971abccb34b2935";             //Your apikey key
        String format = "1";

        URLConnection myURLConnection;
        URL myURL;
        BufferedReader reader;

        String mainUrl="http://apilayer.net/api/validate?";

        //API Paramters
        StringBuilder sendSmsData= new StringBuilder(mainUrl);
        sendSmsData.append("access_key="+access_key);
        sendSmsData.append("&number="+number);
        sendSmsData.append("&country_code="+country_code);
        sendSmsData.append("&format="+format);

        //final string
        mainUrl = sendSmsData.toString();
        try
        {
            //prepare connection
            myURL = new URL(mainUrl);
            myURLConnection = myURL.openConnection();
            myURLConnection.connect();
            reader= new BufferedReader(new InputStreamReader(myURLConnection.getInputStream()));
            //reading response
            String response;
            while ((response = reader.readLine()) != null)
                //print response
                if(response.contains("valid")){
                    String ans = response.substring(10);
                    if(ans.charAt(0) == 't'){
                        flag = true;
                    }else{
                        flag = false;
                    }
                }

            //finally close connection
            reader.close();
        }
        catch (IOException e)
        {
            e.printStackTrace();
        }

    }

    private String getGender() {
        String gender="";
        if(MRadioButton.isSelected()){
            gender = "M";
        }else if(FRadioButton.isSelected()){
            gender = "F";
        }else if(ORadioButton.isSelected()){
            gender = "O";
        }
        return gender;
    }

    private String getDate() {
        Date date = DatePicker.getDate(); 
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");  
        return formatter.format(date); 
    }

    private void startNext() {
        
        if(checkDate()){
            if(checkNumber()){
                if(Database.checkInternet()){
//                    System.out.println("Internet Found");
                    
                    t1 = new Thread() {
                        @Override
                        public void run() {
                            NumberVerification.setLayout(new BorderLayout());
                            NumberVerification.add(new PaintPane());
                            NumberVerification.pack();
                            NumberVerification.setVisible(true);
                            NumberVerification.toFront();
                        }

                        @Override
                        public void interrupt() {
                            NumberVerification.setVisible(false);
                            NumberVerification.dispose();
                            t3 = new Thread(){
                                @Override
                                public void run() {
                                    startWork();
                                }            
                            };
                            t3.start();
                            super.interrupt();
                        }
                    };
                    t1.setPriority(Thread.NORM_PRIORITY);

                    Thread t2 = new Thread(){
                        @Override
                        public void run() {
                            startVerification(NumberField.getText().trim());
                        }
                        // for stopping the thread
                        @Override
                        public void interrupt() {
                            super.interrupt();
                        }
                    };
                    t2.setPriority(Thread.MAX_PRIORITY);
                    
                    Timer timer = new Timer(7180,
                                    e -> t1.interrupt());
                    timer.setRepeats(false);
                    t1.start();
                    t2.start();
                    try {
                        t2.join();
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    timer.start();

                }else{

                    NoInternet.setLayout(new BorderLayout());
                    NoInternet.add(new NoInternet(1));    
                    NoInternet.pack();
                    NoInternet.setVisible(true);
                    NoInternet.toFront();
                    Timer timer = new Timer(11600,
                            e -> NoInternet.setVisible(false));
                    timer.setRepeats(false);
                    timer.start();
                    
                }
            }
        }
        
    }
    
    private void startWork(){
        if(flag == true){

            startSaving();
            
        }else if(flag == false){
            
            JLabel label = new JLabel("Please enter a registered mobile number.");       
            label.setFont(new Font("Arial", Font.BOLD, 15));
            String title = "Error";
            JOptionPane.showMessageDialog(null, label, title, 
                                JOptionPane.WARNING_MESSAGE, numberError);
            NumberField.setText("");
            NumberField.requestFocusInWindow();
            
        }
        t3.interrupt();
    }

    private void startSaving() {
        
        this.setEnabled(false);
        
//        Starting to save data in Database:
            String name = NameField.getText();
            String email = EmailField.getText();
            String g = getGender();
            String date = getDate();
            String country = (String) CountryComboBox.getSelectedItem();
            String number = NumberField.getText();
            int icon;
            switch (g) {
                case "M":
                    icon = 1;
                    break;
                case "F":
                    icon = 11;
                    break;
                default:
                    icon = 16;
                    break;
            }

            try{
                Class.forName("com.mysql.jdbc.Driver");
                Connection con = (Connection) DriverManager.getConnection(
                    "jdbc:mysql://localhost:3306/project8525?useSSL=false&characterEncoding=latin1","root","123456789");
                Statement stmt = (Statement) con.createStatement();
                String query = "INSERT INTO userdetails VALUES( '" 
                                + name + "', '" 
                                + email + "', '" 
                                + g + "', '" 
                                + date + "', '"
                                + country + "', '"
                                + number  + "', "
                                + icon + " );";
                stmt.executeUpdate(query);
            }
            catch(Exception e){
                System.out.println(e);
            }

            JLabel label = new JLabel("Details saved successfully.");       
            label.setFont(new Font("Arial", Font.BOLD, 15));
            String title = "Success";
            JOptionPane.showMessageDialog(null, label, title, JOptionPane.INFORMATION_MESSAGE, detailsSavedIcon);

            try {
                Final next = new Final(name, email, "");
                next.setVisible(true);
            } catch (URISyntaxException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
            this.dispose();    
    }
   
}

//Api Acess key: cf9fb051b51ac25f4971abccb34b2935
