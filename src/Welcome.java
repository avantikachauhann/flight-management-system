import javax.imageio.ImageIO;
import javax.swing.*;
import java.awt.*;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;

/**
 ** @author Saksham
 */
@SuppressWarnings("ALL")
public class Welcome extends javax.swing.JFrame {

    //Global Declaration:

    //Title Icon:
    InputStream imageInputStream = getClass().getResourceAsStream("Images/TitleIcon.png");
    BufferedImage bufferedImage;
    {
        try {
            bufferedImage = ImageIO.read(imageInputStream);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    //Threads:
    Thread t1, t2;

    //Icons:
    ImageIcon exitIcon = new ImageIcon(getClass().getResource("/Images/EXITPLOGO1.png"));
    ImageIcon successIcon = new ImageIcon(getClass().getResource("/Images/SuccessIcon.png"));
    ImageIcon infoIcon = new ImageIcon(getClass().getResource("/Images/InformationIcon.png"));
    ImageIcon emailVerified = new ImageIcon(getClass().getResource("/Images/EmailVerified.png"));
    ImageIcon questionIcon = new ImageIcon(getClass().getResource("/Images/QuestionIcon.png"));
    ImageIcon errorIcon = new ImageIcon(getClass().getResource("/Images/ErrorIcon.png"));
    ImageIcon warningIcon = new ImageIcon(getClass().getResource("/Images/WarningIcon.png"));

    Color LightGray = new Color(240, 240, 240);
    int view1 = 0, view2 = 0;
    String OTP, email;
    SplashScreen ss = new SplashScreen();


    /**
     * Creates new form Welcome
     */

    public Welcome() {
        initComponents();
        setCursor();
        myInitComponents();
        
        ss.requestFocusInWindow();
        ss.toFront();
        ss.setVisible(true);
        this.setVisible(false);

        Timer timer = new Timer(3900, e -> showMain());
        timer.setRepeats(false);
        timer.start();
    }

    private boolean flag1 = false;
    private boolean flag2 = false;
    private boolean verification = false;
    int k = 0;
    
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        OTPVerification = new javax.swing.JDialog();
        Panel2 = new javax.swing.JPanel();
        EmailIconLabel = new javax.swing.JLabel();
        VerificationLabel = new javax.swing.JLabel();
        FTF1 = new javax.swing.JFormattedTextField();
        U1 = new javax.swing.JSeparator();
        FTF2 = new javax.swing.JFormattedTextField();
        U2 = new javax.swing.JSeparator();
        FTF3 = new javax.swing.JFormattedTextField();
        U3 = new javax.swing.JSeparator();
        FTF4 = new javax.swing.JFormattedTextField();
        U4 = new javax.swing.JSeparator();
        FTF5 = new javax.swing.JFormattedTextField();
        U5 = new javax.swing.JSeparator();
        FTF6 = new javax.swing.JFormattedTextField();
        U6 = new javax.swing.JSeparator();
        CancelIcon = new javax.swing.JLabel();
        CancelLabel = new javax.swing.JLabel();
        ContinueIcon = new javax.swing.JLabel();
        ContinueLabel = new javax.swing.JLabel();
        Instruction1Label = new javax.swing.JLabel();
        Instruction2Label = new javax.swing.JLabel();
        ResendIcon = new javax.swing.JLabel();
        ResendLabel = new javax.swing.JLabel();
        ClearIcon = new javax.swing.JLabel();
        ClearLabel = new javax.swing.JLabel();
        LoadingDialog = new javax.swing.JDialog();
        jLabel2 = new javax.swing.JLabel();
        NoInternet = new javax.swing.JDialog();
        Panel1 = new javax.swing.JPanel();
        WhiteLabel = new javax.swing.JLabel();
        UpperPanel = new javax.swing.JPanel();
        PlaneLabel = new javax.swing.JLabel();
        CountryLabel = new javax.swing.JLabel();
        CountryList = new javax.swing.JComboBox<>();
        GlobeLabel = new javax.swing.JLabel();
        LogoLabel = new javax.swing.JLabel();
        Test = new javax.swing.JTextArea();
        Exit = new javax.swing.JButton();
        Heading1Label = new javax.swing.JLabel();
        Heading2Label = new javax.swing.JLabel();
        RightPanel = new javax.swing.JPanel();
        NameField = new javax.swing.JTextField();
        EmailField = new javax.swing.JTextField();
        PasswordField1 = new javax.swing.JPasswordField();
        SignUp = new javax.swing.JButton();
        EmailLabel = new javax.swing.JLabel();
        NameLabel = new javax.swing.JLabel();
        PasswordLabel = new javax.swing.JLabel();
        InstructLabel = new javax.swing.JLabel();
        PreLabel = new javax.swing.JLabel();
        LoginLabel = new javax.swing.JLabel();
        SkylineLabel = new javax.swing.JLabel();
        Tick1 = new javax.swing.JLabel();
        Tick2 = new javax.swing.JLabel();
        PasswordField2 = new javax.swing.JPasswordField();
        ViewPassword1 = new javax.swing.JLabel();
        ViewPassword2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        OTPVerification.setBackground(new java.awt.Color(255, 255, 255));
        OTPVerification.setMinimumSize(new java.awt.Dimension(1200, 625));
        OTPVerification.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        OTPVerification.setUndecorated(true);

        Panel2.setBackground(new java.awt.Color(255, 255, 255));
        Panel2.setMaximumSize(new java.awt.Dimension(1200, 625));
        Panel2.setMinimumSize(new java.awt.Dimension(1200, 625));
        Panel2.setPreferredSize(new java.awt.Dimension(1200, 625));
        Panel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        EmailIconLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/EMAIL.png"))); // NOI18N
        Panel2.add(EmailIconLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 30, -1, 160));

        VerificationLabel.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        VerificationLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        VerificationLabel.setText("Verification");
        Panel2.add(VerificationLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 210, 300, 50));

        FTF1.setBackground(new java.awt.Color(247, 247, 247));
        FTF1.setBorder(null);
        FTF1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#"))));
        FTF1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        FTF1.setFont(new java.awt.Font("Arial", 1, 50)); // NOI18N
        FTF1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                FTF1KeyTyped(evt);
            }
        });
        Panel2.add(FTF1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 320, 60, 60));

        U1.setBackground(new java.awt.Color(102, 102, 102));
        U1.setForeground(new java.awt.Color(102, 102, 102));
        U1.setOpaque(true);
        Panel2.add(U1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 380, 60, 3));

        FTF2.setBackground(new java.awt.Color(247, 247, 247));
        FTF2.setBorder(null);
        FTF2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#"))));
        FTF2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        FTF2.setFont(new java.awt.Font("Arial", 1, 50)); // NOI18N
        FTF2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                FTF2KeyTyped(evt);
            }
        });
        Panel2.add(FTF2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 320, 60, 60));

        U2.setBackground(new java.awt.Color(102, 102, 102));
        U2.setForeground(new java.awt.Color(102, 102, 102));
        U2.setOpaque(true);
        Panel2.add(U2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 380, 60, 3));

        FTF3.setBackground(new java.awt.Color(247, 247, 247));
        FTF3.setBorder(null);
        FTF3.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#"))));
        FTF3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        FTF3.setFont(new java.awt.Font("Arial", 1, 50)); // NOI18N
        FTF3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                FTF3KeyTyped(evt);
            }
        });
        Panel2.add(FTF3, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 320, 60, 60));

        U3.setBackground(new java.awt.Color(102, 102, 102));
        U3.setForeground(new java.awt.Color(102, 102, 102));
        U3.setOpaque(true);
        Panel2.add(U3, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 380, 60, 3));

        FTF4.setBackground(new java.awt.Color(247, 247, 247));
        FTF4.setBorder(null);
        FTF4.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#"))));
        FTF4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        FTF4.setFont(new java.awt.Font("Arial", 1, 50)); // NOI18N
        FTF4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                FTF4KeyTyped(evt);
            }
        });
        Panel2.add(FTF4, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 320, 60, 60));

        U4.setBackground(new java.awt.Color(102, 102, 102));
        U4.setForeground(new java.awt.Color(102, 102, 102));
        U4.setOpaque(true);
        Panel2.add(U4, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 380, 60, 3));

        FTF5.setBackground(new java.awt.Color(247, 247, 247));
        FTF5.setBorder(null);
        FTF5.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#"))));
        FTF5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        FTF5.setFont(new java.awt.Font("Arial", 1, 50)); // NOI18N
        FTF5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                FTF5KeyTyped(evt);
            }
        });
        Panel2.add(FTF5, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 320, 60, 60));

        U5.setBackground(new java.awt.Color(102, 102, 102));
        U5.setForeground(new java.awt.Color(102, 102, 102));
        U5.setOpaque(true);
        Panel2.add(U5, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 380, 60, 3));

        FTF6.setBackground(new java.awt.Color(247, 247, 247));
        FTF6.setBorder(null);
        FTF6.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#"))));
        FTF6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        FTF6.setFont(new java.awt.Font("Arial", 1, 50)); // NOI18N
        FTF6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                FTF6KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                FTF6KeyTyped(evt);
            }
        });
        Panel2.add(FTF6, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 320, 60, 60));

        U6.setBackground(new java.awt.Color(102, 102, 102));
        U6.setForeground(new java.awt.Color(102, 102, 102));
        U6.setOpaque(true);
        Panel2.add(U6, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 380, 60, 3));

        CancelIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/CancelIcon.png"))); // NOI18N
        CancelIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CancelIconMouseClicked(evt);
            }
        });
        Panel2.add(CancelIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 520, -1, -1));

        CancelLabel.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        CancelLabel.setForeground(new java.awt.Color(191, 30, 46));
        CancelLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CancelLabel.setText("CANCEL");
        CancelLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CancelIconMouseClicked(evt);
            }
        });
        Panel2.add(CancelLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 520, 100, 40));

        ContinueIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ContinueIcon.png"))); // NOI18N
        ContinueIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ContinueIconMouseClicked(evt);
            }
        });
        Panel2.add(ContinueIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 520, -1, -1));

        ContinueLabel.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        ContinueLabel.setForeground(new java.awt.Color(11, 148, 68));
        ContinueLabel.setText("CONTINUE");
        ContinueLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ContinueIconMouseClicked(evt);
            }
        });
        Panel2.add(ContinueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 520, 130, 40));

        Instruction1Label.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Instruction1Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Instruction1Label.setText("Email has been sent to your e-mail address. Please verify by entering the password.");
        Panel2.add(Instruction1Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 260, 540, -1));

        Instruction2Label.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Instruction2Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Instruction2Label.setText("Only numeric input supported.");
        Panel2.add(Instruction2Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 390, 520, -1));

        ResendIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ResendIconn.png"))); // NOI18N
        ResendIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ResendIconMouseClicked(evt);
            }
        });
        Panel2.add(ResendIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 460, -1, -1));

        ResendLabel.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        ResendLabel.setForeground(new java.awt.Color(0, 95, 246));
        ResendLabel.setText("RESEND");
        ResendLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ResendIconMouseClicked(evt);
            }
        });
        Panel2.add(ResendLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 460, 100, 40));

        ClearIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ClearIcon.png"))); // NOI18N
        ClearIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ClearLabelMouseClicked(evt);
            }
        });
        Panel2.add(ClearIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 460, -1, -1));

        ClearLabel.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        ClearLabel.setText("CLEAR");
        ClearLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ClearLabelMouseClicked(evt);
            }
        });
        Panel2.add(ClearLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 460, 100, 40));

        javax.swing.GroupLayout OTPVerificationLayout = new javax.swing.GroupLayout(OTPVerification.getContentPane());
        OTPVerification.getContentPane().setLayout(OTPVerificationLayout);
        OTPVerificationLayout.setHorizontalGroup(
            OTPVerificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        OTPVerificationLayout.setVerticalGroup(
            OTPVerificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        LoadingDialog.setBackground(new java.awt.Color(72, 78, 83));
        LoadingDialog.setMinimumSize(new java.awt.Dimension(200, 220));
        LoadingDialog.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        LoadingDialog.setUndecorated(true);

        jLabel2.setBackground(new java.awt.Color(72, 78, 83));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/LoadingNew.gif"))); // NOI18N
        jLabel2.setOpaque(true);

        javax.swing.GroupLayout LoadingDialogLayout = new javax.swing.GroupLayout(LoadingDialog.getContentPane());
        LoadingDialog.getContentPane().setLayout(LoadingDialogLayout);
        LoadingDialogLayout.setHorizontalGroup(
            LoadingDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        LoadingDialogLayout.setVerticalGroup(
            LoadingDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        NoInternet.setBackground(new java.awt.Color(255, 255, 255));
        NoInternet.setMinimumSize(new java.awt.Dimension(800, 600));
        NoInternet.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        NoInternet.setUndecorated(true);

        javax.swing.GroupLayout NoInternetLayout = new javax.swing.GroupLayout(NoInternet.getContentPane());
        NoInternet.getContentPane().setLayout(NoInternetLayout);
        NoInternetLayout.setHorizontalGroup(
            NoInternetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );
        NoInternetLayout.setVerticalGroup(
            NoInternetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1200, 720));
        setMinimumSize(new java.awt.Dimension(1200, 720));
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(1200, 720));

        Panel1.setBackground(new java.awt.Color(72, 78, 83));
        Panel1.setAutoscrolls(true);
        Panel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Panel1.setMaximumSize(new java.awt.Dimension(1200, 720));
        Panel1.setMinimumSize(new java.awt.Dimension(1200, 720));
        Panel1.setPreferredSize(new java.awt.Dimension(1200, 720));
        Panel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        WhiteLabel.setBackground(new java.awt.Color(255, 255, 255));
        WhiteLabel.setOpaque(true);
        Panel1.add(WhiteLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 95, 1200, 625));

        UpperPanel.setBackground(new java.awt.Color(36, 41, 46));
        UpperPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        PlaneLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/PLANE.png"))); // NOI18N
        UpperPanel.add(PlaneLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 13, 205, 84));

        CountryLabel.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        CountryLabel.setForeground(new java.awt.Color(255, 255, 255));
        CountryLabel.setText("COUNTRY: ");
        UpperPanel.add(CountryLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 40, -1, -1));

        CountryList.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        CountryList.setForeground(new java.awt.Color(0, 0, 102));
        CountryList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Afghanistan", "Algeria", "Angola", "Argentina", "Australia", "Austria", "Bahrain", "Bangladesh", "Belgium", "Brazil", "Bulgaria", "Cambodia", "Canada", "Chile", "China", "Colombia", "Croatia", "Cyprus", "Czech Republic", "Denmark", "Egypt", "Estonia", "Ethiopia", "Finland", "France", "Germany", "Ghana", "Greece", "Hungary", "Iceland", "India", "Indonesia", "Iran", "Iraq", "Ireland", "Italy", "Japan", "Jordan", "Kenya", "Korea", "Kuwait", "Latvia", "Lebanon", "Libya", "Malaysia", "Maldives", "Mauritius", "Mexico", "Morocco", "Myanmar", "Netherlands", "New Zealand", "Nigeria", "Norway", "Oman", "Pakistan", "Panama", "Peru", "Philippines", "Poland", "Portugal", "Qatar", "Romania", "Russia", "Saudi Arabia", "Senegal", "Singapore", "South Africa", "Spain", "Sri Lanka", "Sudan", "Sweden", "Switzerland", "Syria", "Tanzania", "Thailand", "Tunisia", "Turkey", "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom", "Uruguay", "Vietnam", "Yemen", "Zambia", "Zimbabwe" }));
        CountryList.setSelectedIndex(30);
        UpperPanel.add(CountryList, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 40, 146, -1));

        GlobeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        GlobeLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/GLOBE.png"))); // NOI18N
        UpperPanel.add(GlobeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 30, -1, -1));

        LogoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/LOGON.png"))); // NOI18N
        LogoLabel.setText("EMIRATES");
        UpperPanel.add(LogoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(224, 0, 255, 97));

        Panel1.add(UpperPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 95));

        Test.setEditable(false);
        Test.setBackground(new java.awt.Color(72, 78, 83));
        Test.setColumns(20);
        Test.setFont(new java.awt.Font("Microsoft Tai Le", 1, 18)); // NOI18N
        Test.setForeground(new java.awt.Color(255, 255, 255));
        Test.setLineWrap(true);
        Test.setRows(5);
        Test.setText("Whether it's your first flight or simply your latest, we work to anticipate your every need\n\nWe operate modern, efficient and comfortable aircraft, and our culturally diverse workforce delivers award-winning services to our customers across six continents every day.");
        Test.setWrapStyleWord(true);
        Test.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        Test.setMargin(new java.awt.Insets(14, 14, 14, 14));
        Test.setOpaque(false);
        Panel1.add(Test, new org.netbeans.lib.awtextra.AbsoluteConstraints(127, 305, -1, 220));

        Exit.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        Exit.setForeground(new java.awt.Color(255, 255, 255));
        Exit.setText("EXIT");
        Exit.setToolTipText("Exit Button");
        Exit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ExitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ExitMouseExited(evt);
            }
        });
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        Panel1.add(Exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(211, 559, 200, 70));

        Heading1Label.setFont(new java.awt.Font("Microsoft Tai Le", 1, 48)); // NOI18N
        Heading1Label.setForeground(new java.awt.Color(255, 255, 255));
        Heading1Label.setText("Don't just Fly,");
        Panel1.add(Heading1Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(127, 187, 372, 52));

        Heading2Label.setFont(new java.awt.Font("Microsoft Tai Le", 1, 48)); // NOI18N
        Heading2Label.setForeground(new java.awt.Color(255, 255, 255));
        Heading2Label.setText("Fly with Style.");
        Panel1.add(Heading2Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(127, 246, 372, 52));

        RightPanel.setBackground(new java.awt.Color(255, 255, 255));
        RightPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        NameField.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        NameField.setForeground(new java.awt.Color(153, 153, 153));
        NameField.setText("Enter Full Name");
        NameField.setToolTipText("Press enter after completion.");
        NameField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                NameFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                NameFieldFocusLost(evt);
            }
        });
        RightPanel.add(NameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 43, 270, 45));

        EmailField.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        EmailField.setForeground(new java.awt.Color(153, 153, 153));
        EmailField.setText("Enter Email");
        EmailField.setToolTipText("Press enter after completion.");
        EmailField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                EmailFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                EmailFieldFocusLost(evt);
            }
        });
        RightPanel.add(EmailField, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 128, 270, 45));

        PasswordField1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        PasswordField1.setForeground(new java.awt.Color(153, 153, 153));
        PasswordField1.setText("Enter Password");
        PasswordField1.setToolTipText("\"Password must contain at least 8 characters\". Press enter after completion.");
        PasswordField1.setEchoChar('*');
        PasswordField1.setMaximumSize(new java.awt.Dimension(270, 45));
        PasswordField1.setMinimumSize(new java.awt.Dimension(270, 45));
        PasswordField1.setPreferredSize(new java.awt.Dimension(270, 45));
        PasswordField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                PasswordField1FocusGained(evt);
            }
        });
        PasswordField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                PasswordField1KeyPressed(evt);
            }
        });
        RightPanel.add(PasswordField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 213, -1, -1));

        SignUp.setFont(new java.awt.Font("Arial", 1, 21)); // NOI18N
        SignUp.setText("Sign Up");
        SignUp.setPreferredSize(new java.awt.Dimension(105, 35));
        SignUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SignUpActionPerformed(evt);
            }
        });
        RightPanel.add(SignUp, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 358, 318, 34));

        EmailLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        EmailLabel.setText("E-mail");
        EmailLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        RightPanel.add(EmailLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 95, 100, 26));

        NameLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        NameLabel.setText("Full Name");
        NameLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        RightPanel.add(NameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 100, 26));

        PasswordLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        PasswordLabel.setText("Password");
        PasswordLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        RightPanel.add(PasswordLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 100, 26));

        InstructLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        InstructLabel.setText("Make sure it's at least 8 characters long.");
        RightPanel.add(InstructLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 323, 270, -1));

        PreLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        PreLabel.setText("Already a user, proceed to");
        RightPanel.add(PreLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, -1, -1));

        LoginLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        LoginLabel.setForeground(new java.awt.Color(0, 51, 204));
        LoginLabel.setText(" Login.");
        LoginLabel.setToolTipText("Click here if you are already registered.");
        LoginLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LoginLabelMouseClicked(evt);
            }
        });
        RightPanel.add(LoginLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(189, 410, 53, -1));

        SkylineLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SkylineLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/SKYLINEDARK.png"))); // NOI18N
        RightPanel.add(SkylineLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 447, 340, 90));

        Tick1.setBackground(new java.awt.Color(255, 255, 255));
        Tick1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/TICK.png"))); // NOI18N
        Tick1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        RightPanel.add(Tick1, new org.netbeans.lib.awtextra.AbsoluteConstraints(297, 43, 33, 45));

        Tick2.setBackground(new java.awt.Color(255, 255, 255));
        Tick2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/TICK.png"))); // NOI18N
        Tick2.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        RightPanel.add(Tick2, new org.netbeans.lib.awtextra.AbsoluteConstraints(297, 128, 33, 45));

        PasswordField2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        PasswordField2.setForeground(new java.awt.Color(153, 153, 153));
        PasswordField2.setText("Re-Enter Password");
        PasswordField2.setToolTipText("\"Password must contain at least 8 characters\". Press enter after completion.");
        PasswordField2.setEchoChar('*');
        PasswordField2.setMaximumSize(new java.awt.Dimension(270, 45));
        PasswordField2.setMinimumSize(new java.awt.Dimension(270, 45));
        PasswordField2.setPreferredSize(new java.awt.Dimension(270, 45));
        PasswordField2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                PasswordField2FocusGained(evt);
            }
        });
        RightPanel.add(PasswordField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 271, -1, -1));

        ViewPassword1.setBackground(new java.awt.Color(255, 255, 255));
        ViewPassword1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/EYE.png"))); // NOI18N
        ViewPassword1.setToolTipText("\"Password must contain at least 8 characters\"");
        ViewPassword1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ViewPassword1.setOpaque(true);
        ViewPassword1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ViewPassword1MouseClicked(evt);
            }
        });
        RightPanel.add(ViewPassword1, new org.netbeans.lib.awtextra.AbsoluteConstraints(297, 213, 33, 45));

        ViewPassword2.setBackground(new java.awt.Color(255, 255, 255));
        ViewPassword2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/EYE.png"))); // NOI18N
        ViewPassword2.setToolTipText("\"Password must contain at least 8 characters\"");
        ViewPassword2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ViewPassword2.setOpaque(true);
        ViewPassword2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ViewPassword2MouseClicked(evt);
            }
        });
        RightPanel.add(ViewPassword2, new org.netbeans.lib.awtextra.AbsoluteConstraints(297, 271, 33, 45));

        Panel1.add(RightPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(712, 127, 340, -1));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("*Press enter after entering data in each field.");
        Panel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(712, 110, 340, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        // TODO add your handling code here:
        JLabel label = new JLabel("Are you sure you want to exit?");
        label.setFont(new Font("Arial", Font.BOLD, 15));
        String title = "Exit";
        int run = JOptionPane.showConfirmDialog(null, label, title,
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, exitIcon);
        if(run == 0){
            System.exit(0);
        }
    }//GEN-LAST:event_ExitActionPerformed

    private void LoginLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LoginLabelMouseClicked
        // TODO add your handling code here:
        startLogin("");
    }//GEN-LAST:event_LoginLabelMouseClicked

    private void SignUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SignUpActionPerformed
        // TODO add your handling code here:

        String name = NameField.getText();
        String email = EmailField.getText();
        String strp1 = new String(PasswordField1.getPassword());
        String strp2 = new String(PasswordField2.getPassword());

        String strp;
        if(flag1 && flag2) {
            if (strp1.isEmpty() || strp1.equals(" ") || strp2.isEmpty() || strp2.equals(" ")) {

                PasswordField1.setText("");
                PasswordField2.setText("");
                PasswordField1.requestFocusInWindow();
                JLabel label = new JLabel("Empty Password Entered. Please try again.");
                label.setFont(new Font("Arial", Font.BOLD, 15));
                String title = "Invalid Password";
                JOptionPane.showMessageDialog(null, label, title,
                        JOptionPane.INFORMATION_MESSAGE, warningIcon);

            } else if (strp1.length() == strp2.length()) {
                if (strp1.length() <= 7) {

                    PasswordField1.setText("");
                    PasswordField2.setText("");
                    PasswordField1.requestFocusInWindow();
                    JLabel label = new JLabel("Too short password Entered. Please try again.");
                    label.setFont(new Font("Arial", Font.BOLD, 15));
                    String title = "Too short password";
                    JOptionPane.showMessageDialog(null, label, title,
                            JOptionPane.INFORMATION_MESSAGE, warningIcon);

                } else {
                    if (strp1.equals(strp2)) {

                        name = name.trim();
                        email = email.trim();
                        email = email.toLowerCase();
                        strp = strp1;
                        String passcode = Database.getMd5(strp);

                        //Checking for records in database & if none found, adding user data to the database.
                        {
                            if (Database.userExists(email)) {

                                JLabel label = new JLabel("User Already Exists in the Database.");
                                label.setFont(new Font("Arial", Font.BOLD, 15));
                                String title = "User already exists.";
                                JOptionPane.showMessageDialog(null, label, title,
                                        JOptionPane.INFORMATION_MESSAGE, infoIcon);

                            } else {
                                int rowCount = Database.getRowCount();
                                rowCount++;
                                try {

                                    Class.forName("com.mysql.jdbc.Driver");
                                    Connection con = (Connection) DriverManager.getConnection(
                                            "jdbc:mysql://localhost:3306/project8525?useSSL=false&characterEncoding=latin1", "root", "123456789");
                                    Statement stmt = (Statement) con.createStatement();
                                    String query = "INSERT INTO userdata VALUES(" + rowCount + ", '" + name + "', '" + email + "', '" + passcode
                                            + "');";
                                    stmt.executeUpdate(query);

                                } catch (Exception e) {

                                    System.out.println(e);

                                }

                                SignUp.setEnabled(false);
                                NameField.setEnabled(false);
                                EmailField.setEnabled(false);
                                PasswordField1.setEnabled(false);
                                JLabel label = new JLabel("Details saved successfully. Please proceed to login.");
                                label.setFont(new Font("Arial", Font.BOLD, 15));
                                String title = "Records saved";
                                JOptionPane.showMessageDialog(null, label, title,
                                        JOptionPane.INFORMATION_MESSAGE, successIcon);

                            }
                            startLogin(email);
                            return;
                        }
                    }

                }
            }
        }else{
            JLabel label = new JLabel("Either Name or Email is empty or not verified. Please try again");
            label.setFont(new Font("Arial", Font.BOLD, 15));
            String title = "Error";
            JOptionPane.showMessageDialog(null, label, title,
                    JOptionPane.INFORMATION_MESSAGE, warningIcon);
        }
    }//GEN-LAST:event_SignUpActionPerformed

    private void EmailFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_EmailFieldFocusLost
        // TODO add your handling code here:
        String str = EmailField.getText();
        str = str.trim();
        str = str.toLowerCase();
        email = str;
        if(str.contains("@")){
            if(str.contains("@gmail.com") || str.contains("@amity.edu") || str.contains("@yahoo.com") ||
                    str.contains("@outlook.com") || str.contains("@icloud.com")){

                JLabel label = new JLabel("For email verification, an OTP will be sent." +
                        " Please ensure availabilty of internet connection");
                label.setFont(new Font("Arial", Font.BOLD, 15));
                String[] options = {"Proceed.", "Wait a sec"};
                String title = "Continue?";
                int run =  JOptionPane.showOptionDialog(null, label, title,
                        JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE,
                        questionIcon, options, options[0]);

                if(run == 0) {

                    //Showing Loading Animation;
                    t1 = new Thread() {
                        @Override
                        public void run() {
                            showProgress();
                        }

                        @Override
                        public void interrupt() {
                            super.interrupt();
                        }
                    };
                    t1.setPriority(Thread.MIN_PRIORITY);

                    t2 = new Thread(){
                        @Override
                        public void run() {
                            startProcess();
                        }
                        // for stopping the thread
                        @Override
                        public void interrupt() {
                            super.interrupt();
                        }
                    };
                    t2.setPriority(Thread.MAX_PRIORITY);

                    if(Database.checkInternet()){
                        t1.start();
                        t2.start();
                    }else{
                        Thread t3 = new Thread() {
                        @Override
                        public void run() {
                            WhiteLabel.setVisible(true);
                            NoInternet.setLayout(new BorderLayout());
                            NoInternet.add(new NoInternet(2));    
                            NoInternet.pack();
                            NoInternet.setVisible(true);
                            NoInternet.toFront();
                        }

                        @Override
                        public void interrupt() {
                            WhiteLabel.setVisible(false);
                            NoInternet.setVisible(true);
                            NoInternet.dispose();
                            super.interrupt();
                        }
                        };
                        t3.setPriority(Thread.MIN_PRIORITY);

                        Timer timer = new Timer(11600,
                                        e -> t3.interrupt());
                        timer.setRepeats(false);
                        t3.start();
                        timer.start();
                    }

                }else{
                    EmailField.requestFocusInWindow();
                }

            }
        }else{
            EmailField.requestFocusInWindow();
            flag2 = false;
            Tick2.setVisible(false);
            JLabel label = new JLabel("Invalid Email Entered. Please try again.");
            label.setFont(new Font("Arial", Font.BOLD, 15));
            String title = "Invalid Email";
            JOptionPane.showMessageDialog(null, label, title,
                    JOptionPane.INFORMATION_MESSAGE, infoIcon);
        }
    }//GEN-LAST:event_EmailFieldFocusLost

    private void NameFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_NameFieldFocusLost
        // TODO add your handling code here:
        String str = NameField.getText();
        str = str.trim();
        if(str.length() >= 3){
            flag1 = true;
            Tick1.setVisible(true);
        }else{
            NameField.setText("");
            NameField.requestFocusInWindow();
            JLabel label = new JLabel("Name entered too short. Please try again.");
            label.setFont(new Font("Arial", Font.BOLD, 15));
            String title = "Invalid name";
            JOptionPane.showMessageDialog(null, label, title,
                    JOptionPane.ERROR_MESSAGE, errorIcon);
        }
    }//GEN-LAST:event_NameFieldFocusLost

    private void PasswordField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PasswordField1KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            PasswordField2.requestFocusInWindow();
        }
    }//GEN-LAST:event_PasswordField1KeyPressed

    private void FTF6KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FTF6KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            startContinue();
        }
    }//GEN-LAST:event_FTF6KeyPressed

    private void ExitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitMouseEntered
        // TODO add your handling code here:
        Exit.setForeground(Color.LIGHT_GRAY);
        Exit.setFont(new Font("SansSerif", Font.BOLD, 26));
    }//GEN-LAST:event_ExitMouseEntered

    private void ExitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitMouseExited
        // TODO add your handling code here:
        Exit.setForeground(Color.WHITE);
        Exit.setFont(new Font("SansSerif", Font.BOLD, 20));
    }//GEN-LAST:event_ExitMouseExited

    private void PasswordField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PasswordField1FocusGained
        // TODO add your handling code here:
        String p = new String(PasswordField1.getPassword());
        if(p.equals("Enter Password")){
            PasswordField1.setText("");
            PasswordField1.setEchoChar('*');
            PasswordField1.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_PasswordField1FocusGained

    private void PasswordField2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PasswordField2FocusGained
        // TODO add your handling code here:
        String p = new String(PasswordField2.getPassword());
        if(p.equals("Re-Enter Password")){
            PasswordField2.setText("");
            PasswordField2.setEchoChar('*');
            PasswordField2.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_PasswordField2FocusGained

    private void EmailFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_EmailFieldFocusGained
        // TODO add your handling code here:
        if(EmailField.getText().equals("Enter Email")){
            EmailField.setText("");
            EmailField.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_EmailFieldFocusGained

    private void NameFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_NameFieldFocusGained
        // TODO add your handling code here:
        if(NameField.getText().equals("Enter Full Name")){
            NameField.setText("");
            NameField.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_NameFieldFocusGained

    private void ViewPassword1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ViewPassword1MouseClicked
        // TODO add your handling code here:
        if(view1 == 0){
            PasswordField1.setEchoChar((char) 0);
            ViewPassword1.setBackground(LightGray);
            view1 = 1;
        }else if(view1 == 1){
            PasswordField1.setEchoChar('*');
            ViewPassword1.setBackground(Color.WHITE);
            view1 = 0;
        }
    }//GEN-LAST:event_ViewPassword1MouseClicked

    private void ViewPassword2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ViewPassword2MouseClicked
        // TODO add your handling code here:
        if(view2 == 0){
            PasswordField2.setEchoChar((char) 0);
            ViewPassword2.setBackground(LightGray);
            view2 = 1;
        }else if(view2 == 1){
            PasswordField2.setEchoChar('*');
            ViewPassword2.setBackground(Color.WHITE);
            view2 = 0;
        }
    }//GEN-LAST:event_ViewPassword2MouseClicked

    private void CancelIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CancelIconMouseClicked
        // TODO add your handling code here:
        OTPVerification.dispose();
        verification = false;
        flag2 = false;
        Tick2.setVisible(false);
        EmailField.requestFocusInWindow();
    }//GEN-LAST:event_CancelIconMouseClicked

    private void ContinueIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ContinueIconMouseClicked
        // TODO add your handling code here:
        startContinue();
    }//GEN-LAST:event_ContinueIconMouseClicked

    private void FTF1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FTF1KeyTyped
        // TODO add your handling code here:
        if(FTF1.getText().length() < 1){
            char c = evt.getKeyChar();
            if (!((c >= '0') && (c <= '9') || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) {
                showInstruction();
                getToolkit().beep();
                evt.consume();
            }else {
                FTF2.requestFocusInWindow();
            }
        }else{
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_FTF1KeyTyped

    private void FTF2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FTF2KeyTyped
        // TODO add your handling code here:
        if(FTF2.getText().length() < 1){
            char c = evt.getKeyChar();
            if (!((c >= '0') && (c <= '9') || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) {
                showInstruction();
                getToolkit().beep();
                evt.consume();
            }else {
                FTF3.requestFocusInWindow();
            }
        }else{
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_FTF2KeyTyped

    private void FTF3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FTF3KeyTyped
        // TODO add your handling code here:
        if(FTF3.getText().length() < 1){
            char c = evt.getKeyChar();
            if (!((c >= '0') && (c <= '9') || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) {
                showInstruction();
                getToolkit().beep();
                evt.consume();
            }else {
                FTF4.requestFocusInWindow();
            }
        }else{
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_FTF3KeyTyped

    private void FTF4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FTF4KeyTyped
        // TODO add your handling code here:
        if(FTF4.getText().length() < 1){
            char c = evt.getKeyChar();
            if (!((c >= '0') && (c <= '9') || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) {
                showInstruction();
                getToolkit().beep();
                evt.consume();
            }else {
                FTF5.requestFocusInWindow();
            }
        }else{
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_FTF4KeyTyped

    private void FTF5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FTF5KeyTyped
        // TODO add your handling code here:
        if(FTF5.getText().length() < 1){
            char c = evt.getKeyChar();
            if (!((c >= '0') && (c <= '9') || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) {
                showInstruction();
                getToolkit().beep();
                evt.consume();
            }else {
                FTF6.requestFocusInWindow();
            }
        }else{
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_FTF5KeyTyped

    private void FTF6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FTF6KeyTyped
        // TODO add your handling code here:
        if(FTF6.getText().length() < 1){
            char c = evt.getKeyChar();
            if (!((c >= '0') && (c <= '9') || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) {
                showInstruction();
                getToolkit().beep();
                evt.consume();
            }
        }else{
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_FTF6KeyTyped

    private void ClearLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ClearLabelMouseClicked
        // TODO add your handling code here:
        FTF1.setText("");
        FTF2.setText("");
        FTF3.setText("");
        FTF4.setText("");
        FTF5.setText("");
        FTF6.setText("");
        FTF1.requestFocusInWindow();
    }//GEN-LAST:event_ClearLabelMouseClicked

    private void ResendIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ResendIconMouseClicked
        // TODO add your handling code here:
        int icode = Database.getOTP();
        showSent();
        String code = Integer.toString(icode);
        System.out.println("OTP is: " + icode);
        OTP = code;
        Mail.sendMailOTP(email, code);

    }//GEN-LAST:event_ResendIconMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Welcome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Welcome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Welcome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Welcome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Welcome();
//                new Welcome().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CancelIcon;
    private javax.swing.JLabel CancelLabel;
    private javax.swing.JLabel ClearIcon;
    private javax.swing.JLabel ClearLabel;
    private javax.swing.JLabel ContinueIcon;
    private javax.swing.JLabel ContinueLabel;
    private javax.swing.JLabel CountryLabel;
    private javax.swing.JComboBox<String> CountryList;
    private javax.swing.JTextField EmailField;
    private javax.swing.JLabel EmailIconLabel;
    private javax.swing.JLabel EmailLabel;
    private javax.swing.JButton Exit;
    private javax.swing.JFormattedTextField FTF1;
    private javax.swing.JFormattedTextField FTF2;
    private javax.swing.JFormattedTextField FTF3;
    private javax.swing.JFormattedTextField FTF4;
    private javax.swing.JFormattedTextField FTF5;
    private javax.swing.JFormattedTextField FTF6;
    private javax.swing.JLabel GlobeLabel;
    private javax.swing.JLabel Heading1Label;
    private javax.swing.JLabel Heading2Label;
    private javax.swing.JLabel InstructLabel;
    private javax.swing.JLabel Instruction1Label;
    private javax.swing.JLabel Instruction2Label;
    private javax.swing.JDialog LoadingDialog;
    private javax.swing.JLabel LoginLabel;
    private javax.swing.JLabel LogoLabel;
    private javax.swing.JTextField NameField;
    private javax.swing.JLabel NameLabel;
    private javax.swing.JDialog NoInternet;
    private javax.swing.JDialog OTPVerification;
    private javax.swing.JPanel Panel1;
    private javax.swing.JPanel Panel2;
    private javax.swing.JPasswordField PasswordField1;
    private javax.swing.JPasswordField PasswordField2;
    private javax.swing.JLabel PasswordLabel;
    private javax.swing.JLabel PlaneLabel;
    private javax.swing.JLabel PreLabel;
    private javax.swing.JLabel ResendIcon;
    private javax.swing.JLabel ResendLabel;
    private javax.swing.JPanel RightPanel;
    private javax.swing.JButton SignUp;
    private javax.swing.JLabel SkylineLabel;
    private javax.swing.JTextArea Test;
    private javax.swing.JLabel Tick1;
    private javax.swing.JLabel Tick2;
    private javax.swing.JSeparator U1;
    private javax.swing.JSeparator U2;
    private javax.swing.JSeparator U3;
    private javax.swing.JSeparator U4;
    private javax.swing.JSeparator U5;
    private javax.swing.JSeparator U6;
    private javax.swing.JPanel UpperPanel;
    private javax.swing.JLabel VerificationLabel;
    private javax.swing.JLabel ViewPassword1;
    private javax.swing.JLabel ViewPassword2;
    private javax.swing.JLabel WhiteLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables

    private void myInitComponents() {
        toFront();
        this.setIconImage(bufferedImage);
        this.setTitle("Welcome Window");
        Tick1.setVisible(false);
        jLabel1.setText(" ");
        Tick2.setVisible(false);
        PasswordField1.setEchoChar((char) 0);
        PasswordField2.setEchoChar((char) 0);
        Exit.setBackground(new java.awt.Color(0,0,0,0));
        Test.setBackground(new java.awt.Color(0,0,0,0));
        SignUp.setBackground(new java.awt.Color(0,0,0,0));
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2,dim.height/2-this.getSize().height/2);
        OTPVerification.setLocation(dim.width/2-this.getSize().width/2,(dim.height/2-this.getSize().height/2) + 95);
        this.setLocationRelativeTo(null);
        LoadingDialog.setLocationRelativeTo(null);
        NoInternet.setLocation((dim.width/2-this.getSize().width/2) + 200 ,(dim.height/2-this.getSize().height/2)+100);
//        LoadingDialog.setVisible(true);
//        LoadingDialog.requestFocusInWindow();
        Instruction2Label.setVisible(false);
        WhiteLabel.setVisible(false);
    }

    private void showProgress() {
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                // Here, we can safely update the GUI because we'll be called from the EDT
                LoadingDialog.setVisible(true);
                LoadingDialog.toFront();
            }
        });
    }

    private void startProcess() {
        int icode = Database.getOTP();
        String code = Integer.toString(icode);
        OTP = code;
        System.out.println(code);
        Mail.sendMailOTP(email, code);
        OTPVerification.setVisible(true);
        OTPVerification.toFront();
        LoadingDialog.setVisible(false);
        {
            t1.interrupt();
        }
        if (verification) {
            EmailField.setEnabled(false);
            flag2 = true;
            Tick2.setVisible(true);
        }

    }

    private void startLogin(String e) {
        Login login = new Login(e);
        login.setVisible(true);
        this.dispose();
    }

    private void showInstruction() {
        Instruction2Label.setText("Only numerical input allowed.");
        Instruction2Label.setVisible(true);
        Timer timer = new Timer(2000, e -> Instruction2Label.setVisible(false));
        timer.setRepeats(false);
        timer.start();
    }

    private void showSent() {
        Instruction2Label.setText("New one time password sent to email.");
        Instruction2Label.setVisible(true);
        Timer timer = new Timer(2000, e -> Instruction2Label.setVisible(false));
        timer.setRepeats(false);
        timer.start();
    }

    private void setCursor() {
        toFront();
        Exit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ViewPassword1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ViewPassword2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ResendIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ResendLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ClearIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ClearLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        CancelIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        CancelLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ContinueIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ContinueLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        LoginLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    }

    private void startContinue() {
        String code = "";
        code = code + FTF1.getText().trim();
        code = code + FTF2.getText().trim();
        code = code + FTF3.getText().trim();
        code = code + FTF4.getText().trim();
        code = code + FTF5.getText().trim();
        code = code + FTF6.getText().trim();
        if(code.equalsIgnoreCase(OTP)){
            verification = true;
            JLabel label = new JLabel("One time password successfully verified.");
            label.setFont(new Font("Arial", Font.BOLD, 15));
            String title = "Success";
            JOptionPane.showMessageDialog(null, label, title,
                    JOptionPane.INFORMATION_MESSAGE, emailVerified);
            PasswordField1.requestFocusInWindow();
            OTPVerification.dispose();

        }else{
            EmailField.requestFocusInWindow();
            JLabel label = new JLabel("Incorrect/Empty password found, Please verify.");
            label.setFont(new Font("Arial", Font.BOLD, 15));
            String title = "Error";
            JOptionPane.showMessageDialog(null, label, title,
                    JOptionPane.ERROR_MESSAGE, errorIcon);
        }
    }

    private void showMain() {
//        ss.setVisible(false);
        this.setVisible(true);
        Timer timer = new Timer(100, e -> ss.setVisible(false));
        timer.setRepeats(false);
        timer.start();
    }

}
