import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import javax.imageio.ImageIO;
import java.awt.image.BufferedImage;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.font.TextAttribute;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Saksham
 */
public class Login extends javax.swing.JFrame {
    
    //Global Declaration:

    //Title Icon:
    InputStream imageInputStream = getClass().getResourceAsStream("Images/TitleIcon.png");
    BufferedImage bufferedImage;
    
    {
        try {
            this.bufferedImage = ImageIO.read(imageInputStream);
        } catch (IOException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
    } 

    //Icons:
    ImageIcon exitIcon = new ImageIcon(getClass().getResource("/Images/EXITPLOGO1.png"));
    ImageIcon successIcon = new ImageIcon(getClass().getResource("/Images/SuccessIcon.png"));
    ImageIcon otpVerified = new ImageIcon(getClass().getResource("/Images/EmailVerified.png"));
    ImageIcon errorIcon = new ImageIcon(getClass().getResource("/Images/ErrorIcon.png"));
    ImageIcon warningIcon = new ImageIcon(getClass().getResource("/Images/WarningIcon.png"));
    ImageIcon noIntenertIcon = new ImageIcon(getClass().getResource("/Images/NoInternetIcon.png"));
    ImageIcon passwordUpdated = new ImageIcon(getClass().getResource("/Images/PasswordUpdatedIcon.png"));
    ImageIcon noEmailFoundIcon = new ImageIcon(getClass().getResource("/Images/EmailNotFoundIcon.png"));
    ImageIcon invalidPassword = new ImageIcon(getClass().getResource("/Images/InvalidPasswordIcon.png"));

    Color LightGray = new Color(240, 240, 240);
    int view1 = 0, view2 = 0, view = 0;
    String OTP, email;
    
    
    /**
     * Creates new form Login
     * @param email
     */
        
    public Login(String email){
        
        
        initComponents();
        myinitComponents(email);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PasswordDialog = new javax.swing.JDialog();
        Panel2 = new javax.swing.JPanel();
        DPanel1 = new javax.swing.JPanel();
        ForgotYourPasswordLabel = new javax.swing.JLabel();
        Instruction1 = new javax.swing.JLabel();
        Header1 = new javax.swing.JLabel();
        EmailField = new javax.swing.JTextField();
        EmailLabel = new javax.swing.JLabel();
        Underline1 = new javax.swing.JSeparator();
        CancelLabel1 = new javax.swing.JLabel();
        ContinueLabel1 = new javax.swing.JLabel();
        Instruction5 = new javax.swing.JLabel();
        DPanel2 = new javax.swing.JPanel();
        Header2 = new javax.swing.JLabel();
        VerificationLabel = new javax.swing.JLabel();
        Instruction2 = new javax.swing.JLabel();
        Instruction3 = new javax.swing.JLabel();
        FTF1 = new javax.swing.JFormattedTextField();
        U1 = new javax.swing.JSeparator();
        FTF2 = new javax.swing.JFormattedTextField();
        U2 = new javax.swing.JSeparator();
        FTF3 = new javax.swing.JFormattedTextField();
        U3 = new javax.swing.JSeparator();
        FTF4 = new javax.swing.JFormattedTextField();
        U4 = new javax.swing.JSeparator();
        FTF5 = new javax.swing.JFormattedTextField();
        U5 = new javax.swing.JSeparator();
        FTF6 = new javax.swing.JFormattedTextField();
        U6 = new javax.swing.JSeparator();
        ContinueLabel2 = new javax.swing.JLabel();
        CancelLabel2 = new javax.swing.JLabel();
        ResendLabel = new javax.swing.JLabel();
        ClearLabel = new javax.swing.JLabel();
        DPanel3 = new javax.swing.JPanel();
        Header3 = new javax.swing.JLabel();
        Underline2 = new javax.swing.JSeparator();
        PasswordLabel1 = new javax.swing.JLabel();
        PasswordField1 = new javax.swing.JPasswordField();
        ViewPassword1 = new javax.swing.JLabel();
        PasswordField2 = new javax.swing.JPasswordField();
        ViewPassword2 = new javax.swing.JLabel();
        PasswordLabel2 = new javax.swing.JLabel();
        Underline3 = new javax.swing.JSeparator();
        CancelLabel3 = new javax.swing.JLabel();
        SaveChangesLabel = new javax.swing.JLabel();
        ResetPasswordLabel = new javax.swing.JLabel();
        Instruction4 = new javax.swing.JLabel();
        NoInternetD = new javax.swing.JDialog();
        Panel1 = new javax.swing.JPanel();
        FaceLabel = new javax.swing.JLabel();
        UsernameLabel = new javax.swing.JLabel();
        Email = new javax.swing.JTextField();
        MUnderline1 = new javax.swing.JSeparator();
        PasswordLabel = new javax.swing.JLabel();
        ViewPassword = new javax.swing.JLabel();
        Password = new javax.swing.JPasswordField();
        MUnderline2 = new javax.swing.JSeparator();
        InstructionLabel = new javax.swing.JLabel();
        ForgotPasswordLabel = new javax.swing.JLabel();
        Animation = new javax.swing.JLabel();
        Exit = new javax.swing.JButton();
        Background = new javax.swing.JLabel();

        PasswordDialog.setMaximumSize(new java.awt.Dimension(1200, 720));
        PasswordDialog.setMinimumSize(new java.awt.Dimension(1200, 720));
        PasswordDialog.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        PasswordDialog.setUndecorated(true);
        PasswordDialog.setPreferredSize(new java.awt.Dimension(1200, 720));

        Panel2.setMaximumSize(new java.awt.Dimension(1200, 720));
        Panel2.setLayout(new java.awt.CardLayout());

        DPanel1.setBackground(new java.awt.Color(255, 255, 255));
        DPanel1.setMaximumSize(new java.awt.Dimension(1200, 720));
        DPanel1.setMinimumSize(new java.awt.Dimension(1200, 720));
        DPanel1.setPreferredSize(new java.awt.Dimension(1200, 720));
        DPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ForgotYourPasswordLabel.setFont(new java.awt.Font("Arial", 0, 40)); // NOI18N
        ForgotYourPasswordLabel.setForeground(new java.awt.Color(14, 14, 14));
        ForgotYourPasswordLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ForgotYourPasswordLabel.setText("Forgot Password?");
        DPanel1.add(ForgotYourPasswordLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 280, 600, -1));

        Instruction1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Instruction1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Instruction1.setText("Don't worry. Resetting your password is easy, just tell us the email address you registered with us. ");
        DPanel1.add(Instruction1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 340, 700, -1));

        Header1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Email2.png"))); // NOI18N
        DPanel1.add(Header1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 70, -1, -1));

        EmailField.setFont(new java.awt.Font("Arial", 0, 22)); // NOI18N
        EmailField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        EmailField.setBorder(null);
        EmailField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                EmailFieldKeyPressed(evt);
            }
        });
        DPanel1.add(EmailField, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 420, 450, 40));

        EmailLabel.setFont(new java.awt.Font("Arial", 0, 22)); // NOI18N
        EmailLabel.setText("E-mail address: ");
        DPanel1.add(EmailLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 420, 180, 40));

        Underline1.setBackground(new java.awt.Color(204, 204, 204));
        Underline1.setForeground(new java.awt.Color(204, 204, 204));
        Underline1.setOpaque(true);
        DPanel1.add(Underline1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 460, 620, 3));

        CancelLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        CancelLabel1.setForeground(new java.awt.Color(191, 31, 46));
        CancelLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CancelLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/CancelIcon.png"))); // NOI18N
        CancelLabel1.setText("CANCEL");
        CancelLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        CancelLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CancelLabel1MouseClicked(evt);
            }
        });
        DPanel1.add(CancelLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 520, 200, -1));

        ContinueLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        ContinueLabel1.setForeground(new java.awt.Color(0, 190, 31));
        ContinueLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ContinueLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/SendIcon.png"))); // NOI18N
        ContinueLabel1.setText("CONTINUE");
        ContinueLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ContinueLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ContinueLabel1MouseClicked(evt);
            }
        });
        DPanel1.add(ContinueLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 520, 200, -1));

        Instruction5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Instruction5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Instruction5.setText("For continuing, Please ensure availability of internet connection.");
        DPanel1.add(Instruction5, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 600, 600, -1));

        Panel2.add(DPanel1, "1");

        DPanel2.setBackground(new java.awt.Color(14, 14, 14));
        DPanel2.setMaximumSize(new java.awt.Dimension(1200, 720));
        DPanel2.setMinimumSize(new java.awt.Dimension(1200, 720));
        DPanel2.setPreferredSize(new java.awt.Dimension(1200, 720));
        DPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Header2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Header2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/LockIcon.png"))); // NOI18N
        DPanel2.add(Header2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 70, 300, -1));

        VerificationLabel.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        VerificationLabel.setForeground(new java.awt.Color(255, 255, 255));
        VerificationLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        VerificationLabel.setText("Verification");
        DPanel2.add(VerificationLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 260, 200, -1));

        Instruction2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Instruction2.setForeground(new java.awt.Color(255, 255, 255));
        Instruction2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Instruction2.setText("Email has been sent to your e-mail address. Please verify by entering the password.");
        DPanel2.add(Instruction2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 310, 600, -1));

        Instruction3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Instruction3.setForeground(new java.awt.Color(255, 255, 255));
        Instruction3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Instruction3.setText("Please have patience, it may take a few moments.");
        DPanel2.add(Instruction3, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 430, 600, -1));

        FTF1.setBackground(new java.awt.Color(38, 38, 38));
        FTF1.setBorder(null);
        FTF1.setForeground(new java.awt.Color(255, 255, 255));
        FTF1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#"))));
        FTF1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        FTF1.setFont(new java.awt.Font("Arial", 1, 50)); // NOI18N
        FTF1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                FTF1KeyTyped(evt);
            }
        });
        DPanel2.add(FTF1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 360, 60, 60));

        U1.setBackground(new java.awt.Color(86, 86, 86));
        U1.setForeground(new java.awt.Color(86, 86, 86));
        U1.setOpaque(true);
        DPanel2.add(U1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 420, 60, 3));

        FTF2.setBackground(new java.awt.Color(38, 38, 38));
        FTF2.setBorder(null);
        FTF2.setForeground(new java.awt.Color(255, 255, 255));
        FTF2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#"))));
        FTF2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        FTF2.setFont(new java.awt.Font("Arial", 1, 50)); // NOI18N
        FTF2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                FTF2KeyTyped(evt);
            }
        });
        DPanel2.add(FTF2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 360, 60, 60));

        U2.setBackground(new java.awt.Color(86, 86, 86));
        U2.setForeground(new java.awt.Color(86, 86, 86));
        U2.setOpaque(true);
        DPanel2.add(U2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 420, 60, 3));

        FTF3.setBackground(new java.awt.Color(38, 38, 38));
        FTF3.setBorder(null);
        FTF3.setForeground(new java.awt.Color(255, 255, 255));
        FTF3.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#"))));
        FTF3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        FTF3.setFont(new java.awt.Font("Arial", 1, 50)); // NOI18N
        FTF3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                FTF3KeyTyped(evt);
            }
        });
        DPanel2.add(FTF3, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 360, 60, 60));

        U3.setBackground(new java.awt.Color(86, 86, 86));
        U3.setForeground(new java.awt.Color(86, 86, 86));
        U3.setOpaque(true);
        DPanel2.add(U3, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 420, 60, 3));

        FTF4.setBackground(new java.awt.Color(38, 38, 38));
        FTF4.setBorder(null);
        FTF4.setForeground(new java.awt.Color(255, 255, 255));
        FTF4.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#"))));
        FTF4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        FTF4.setFont(new java.awt.Font("Arial", 1, 50)); // NOI18N
        FTF4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                FTF4KeyTyped(evt);
            }
        });
        DPanel2.add(FTF4, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 360, 60, 60));

        U4.setBackground(new java.awt.Color(86, 86, 86));
        U4.setForeground(new java.awt.Color(86, 86, 86));
        U4.setOpaque(true);
        DPanel2.add(U4, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 420, 60, 3));

        FTF5.setBackground(new java.awt.Color(38, 38, 38));
        FTF5.setBorder(null);
        FTF5.setForeground(new java.awt.Color(255, 255, 255));
        FTF5.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#"))));
        FTF5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        FTF5.setFont(new java.awt.Font("Arial", 1, 50)); // NOI18N
        FTF5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                FTF5KeyTyped(evt);
            }
        });
        DPanel2.add(FTF5, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 360, 60, 60));

        U5.setBackground(new java.awt.Color(86, 86, 86));
        U5.setForeground(new java.awt.Color(86, 86, 86));
        U5.setOpaque(true);
        DPanel2.add(U5, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 420, 60, 3));

        FTF6.setBackground(new java.awt.Color(38, 38, 38));
        FTF6.setBorder(null);
        FTF6.setForeground(new java.awt.Color(255, 255, 255));
        FTF6.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#"))));
        FTF6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        FTF6.setFont(new java.awt.Font("Arial", 1, 50)); // NOI18N
        FTF6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                FTF6KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                FTF6KeyTyped(evt);
            }
        });
        DPanel2.add(FTF6, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 360, 60, 60));

        U6.setBackground(new java.awt.Color(86, 86, 86));
        U6.setForeground(new java.awt.Color(86, 86, 86));
        U6.setOpaque(true);
        DPanel2.add(U6, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 420, 60, 3));

        ContinueLabel2.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        ContinueLabel2.setForeground(new java.awt.Color(70, 47, 189));
        ContinueLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        ContinueLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/VerifyIcon.png"))); // NOI18N
        ContinueLabel2.setText("CONTINUE");
        ContinueLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ContinueLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ContinueLabel2ContinueIconMouseClicked(evt);
            }
        });
        DPanel2.add(ContinueLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 540, 200, -1));

        CancelLabel2.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        CancelLabel2.setForeground(new java.awt.Color(70, 47, 189));
        CancelLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        CancelLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/CancelIcon2.png"))); // NOI18N
        CancelLabel2.setText("CANCEL");
        CancelLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        CancelLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CancelLabel2ContinueIconMouseClicked(evt);
            }
        });
        DPanel2.add(CancelLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 540, 200, -1));

        ResendLabel.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        ResendLabel.setForeground(new java.awt.Color(70, 47, 189));
        ResendLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        ResendLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ResendIcon2.png"))); // NOI18N
        ResendLabel.setText("RESEND");
        ResendLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ResendLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ResendLabelContinueIconMouseClicked(evt);
            }
        });
        DPanel2.add(ResendLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 480, 200, -1));

        ClearLabel.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        ClearLabel.setForeground(new java.awt.Color(70, 47, 189));
        ClearLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        ClearLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ClearIcon2.png"))); // NOI18N
        ClearLabel.setText("CLEAR");
        ClearLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ClearLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ClearLabelContinueIconMouseClicked(evt);
            }
        });
        DPanel2.add(ClearLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 480, 200, -1));

        Panel2.add(DPanel2, "2");

        DPanel3.setBackground(new java.awt.Color(255, 255, 255));
        DPanel3.setMaximumSize(new java.awt.Dimension(1200, 720));
        DPanel3.setMinimumSize(new java.awt.Dimension(1200, 720));
        DPanel3.setPreferredSize(new java.awt.Dimension(1200, 720));
        DPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Header3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/NewPasswordIcon.jpg"))); // NOI18N
        DPanel3.add(Header3, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 60, -1, -1));

        Underline2.setBackground(new java.awt.Color(102, 102, 102));
        Underline2.setForeground(new java.awt.Color(102, 102, 102));
        Underline2.setOpaque(true);
        DPanel3.add(Underline2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 390, 600, 3));

        PasswordLabel1.setFont(new java.awt.Font("Arial", 0, 22)); // NOI18N
        PasswordLabel1.setText("New Password:");
        DPanel3.add(PasswordLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 350, 250, 40));

        PasswordField1.setFont(new java.awt.Font("Arial", 0, 22)); // NOI18N
        PasswordField1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        PasswordField1.setBorder(null);
        PasswordField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                PasswordField1KeyPressed(evt);
            }
        });
        DPanel3.add(PasswordField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 350, 350, 40));

        ViewPassword1.setBackground(new java.awt.Color(255, 255, 255));
        ViewPassword1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ViewPassword1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/EYE.png"))); // NOI18N
        ViewPassword1.setToolTipText("\"Password must contain at least 8 characters\"");
        ViewPassword1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ViewPassword1.setOpaque(true);
        ViewPassword1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ViewPassword1MouseClicked(evt);
            }
        });
        DPanel3.add(ViewPassword1, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 350, 40, 40));

        PasswordField2.setFont(new java.awt.Font("Arial", 0, 22)); // NOI18N
        PasswordField2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        PasswordField2.setBorder(null);
        DPanel3.add(PasswordField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 420, 350, 40));

        ViewPassword2.setBackground(new java.awt.Color(255, 255, 255));
        ViewPassword2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ViewPassword2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/EYE.png"))); // NOI18N
        ViewPassword2.setToolTipText("\"Password must contain at least 8 characters\"");
        ViewPassword2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ViewPassword2.setOpaque(true);
        ViewPassword2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ViewPassword2MouseClicked(evt);
            }
        });
        DPanel3.add(ViewPassword2, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 420, 40, 40));

        PasswordLabel2.setFont(new java.awt.Font("Arial", 0, 22)); // NOI18N
        PasswordLabel2.setText("Re-enter new password:");
        DPanel3.add(PasswordLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 420, 250, 40));

        Underline3.setBackground(new java.awt.Color(102, 102, 102));
        Underline3.setForeground(new java.awt.Color(102, 102, 102));
        Underline3.setOpaque(true);
        DPanel3.add(Underline3, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 460, 600, 3));

        CancelLabel3.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        CancelLabel3.setForeground(new java.awt.Color(106, 50, 139));
        CancelLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CancelLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/BackIconNew.png"))); // NOI18N
        CancelLabel3.setText("Back");
        CancelLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        CancelLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CancelLabel3MouseClicked(evt);
            }
        });
        DPanel3.add(CancelLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 540, 250, -1));

        SaveChangesLabel.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        SaveChangesLabel.setForeground(new java.awt.Color(106, 50, 139));
        SaveChangesLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SaveChangesLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/SaveIconNew.png"))); // NOI18N
        SaveChangesLabel.setText("Save Changes");
        SaveChangesLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SaveChangesLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SaveChangesLabelMouseClicked(evt);
            }
        });
        DPanel3.add(SaveChangesLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 540, 250, -1));

        ResetPasswordLabel.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        ResetPasswordLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ResetPasswordLabel.setText("Reset Password");
        DPanel3.add(ResetPasswordLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 270, 300, 40));

        Instruction4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Instruction4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Instruction4.setText("Password length should contains atleast 8 characters");
        DPanel3.add(Instruction4, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 480, 600, 20));

        Panel2.add(DPanel3, "3");

        javax.swing.GroupLayout PasswordDialogLayout = new javax.swing.GroupLayout(PasswordDialog.getContentPane());
        PasswordDialog.getContentPane().setLayout(PasswordDialogLayout);
        PasswordDialogLayout.setHorizontalGroup(
            PasswordDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1200, Short.MAX_VALUE)
            .addGroup(PasswordDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PasswordDialogLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(Panel2, javax.swing.GroupLayout.PREFERRED_SIZE, 1200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        PasswordDialogLayout.setVerticalGroup(
            PasswordDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 720, Short.MAX_VALUE)
            .addGroup(PasswordDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PasswordDialogLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(Panel2, javax.swing.GroupLayout.PREFERRED_SIZE, 720, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        PasswordDialog.getAccessibleContext().setAccessibleParent(null);

        NoInternetD.setBackground(new java.awt.Color(255, 255, 255));
        NoInternetD.setMinimumSize(new java.awt.Dimension(800, 600));
        NoInternetD.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        NoInternetD.setUndecorated(true);

        javax.swing.GroupLayout NoInternetDLayout = new javax.swing.GroupLayout(NoInternetD.getContentPane());
        NoInternetD.getContentPane().setLayout(NoInternetDLayout);
        NoInternetDLayout.setHorizontalGroup(
            NoInternetDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );
        NoInternetDLayout.setVerticalGroup(
            NoInternetDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setMaximumSize(new java.awt.Dimension(1200, 720));
        setMinimumSize(new java.awt.Dimension(1200, 720));
        setUndecorated(true);
        setResizable(false);

        Panel1.setMaximumSize(new java.awt.Dimension(1200, 720));
        Panel1.setMinimumSize(new java.awt.Dimension(1200, 720));
        Panel1.setOpaque(false);
        Panel1.setPreferredSize(new java.awt.Dimension(1200, 720));
        Panel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        FaceLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        FaceLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/LoginIcon.png"))); // NOI18N
        Panel1.add(FaceLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 90, 150, -1));

        UsernameLabel.setFont(new java.awt.Font("Arial", 0, 19)); // NOI18N
        UsernameLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        UsernameLabel.setText("Email:");
        Panel1.add(UsernameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 270, 90, 45));

        Email.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        Email.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Email.setToolTipText("UserName Field");
        Email.setBorder(null);
        Panel1.add(Email, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 270, 290, 45));

        MUnderline1.setBackground(new java.awt.Color(160, 160, 160));
        MUnderline1.setOpaque(true);
        Panel1.add(MUnderline1, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 315, 380, 2));

        PasswordLabel.setFont(new java.awt.Font("Arial", 0, 19)); // NOI18N
        PasswordLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        PasswordLabel.setText("Password:");
        Panel1.add(PasswordLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 350, 90, 45));

        ViewPassword.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ViewPassword.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/EYE.png"))); // NOI18N
        ViewPassword.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ViewPassword.setOpaque(true);
        ViewPassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ViewPasswordMouseClicked(evt);
            }
        });
        Panel1.add(ViewPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 350, 30, 45));

        Password.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        Password.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Password.setToolTipText("Password Field");
        Password.setBorder(null);
        Password.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                PasswordKeyPressed(evt);
            }
        });
        Panel1.add(Password, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 350, 260, 45));

        MUnderline2.setBackground(new java.awt.Color(160, 160, 160));
        MUnderline2.setOpaque(true);
        Panel1.add(MUnderline2, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 395, 380, 2));

        InstructionLabel.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        InstructionLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        InstructionLabel.setText("*Press enter after completion");
        InstructionLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Panel1.add(InstructionLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 405, 380, 15));

        ForgotPasswordLabel.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        ForgotPasswordLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ForgotPasswordLabel.setText("Forgot password?");
        ForgotPasswordLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ForgotPasswordLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ForgotPasswordLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ForgotPasswordLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ForgotPasswordLabelMouseExited(evt);
            }
        });
        Panel1.add(ForgotPasswordLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 450, 380, 40));

        Animation.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/PLANE.gif"))); // NOI18N
        Panel1.add(Animation, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 370, 500, 350));

        Exit.setFont(new java.awt.Font("Arial", 1, 25)); // NOI18N
        Exit.setText("EXIT");
        Exit.setToolTipText("Exit Button");
        Exit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ExitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ExitMouseExited(evt);
            }
        });
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        Panel1.add(Exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 500, 240, 70));

        Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/LoginBackgroundNEW.png"))); // NOI18N
        Panel1.add(Background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        // TODO add your handling code here:
        JLabel label = new JLabel("Are you sure you want to exit?");
        label.setFont(new Font("Arial", Font.BOLD, 15));
        String title = "Exit";
        int run = JOptionPane.showConfirmDialog(null, label, title,
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, exitIcon);
        if(run == 0){
            System.exit(0);
        }          
    }//GEN-LAST:event_ExitActionPerformed

    private void PasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PasswordKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String username = Email.getText();
            String strp = new String(Password.getPassword());
            String passcode = Database.getMd5(strp);

            login(username, passcode);
        }

    }//GEN-LAST:event_PasswordKeyPressed

    private void ExitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitMouseEntered
        // TODO add your handling code here:
        Exit.setFont(new Font("Arial", Font.BOLD, 30));
    }//GEN-LAST:event_ExitMouseEntered

    private void ExitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitMouseExited
        // TODO add your handling code here:
        Exit.setFont(new Font("Arial", Font.BOLD, 25));
    }//GEN-LAST:event_ExitMouseExited

    private void CancelLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CancelLabel1MouseClicked
        // TODO add your handling code here:
        PasswordDialog.dispose();
        clearEverything();
    }//GEN-LAST:event_CancelLabel1MouseClicked

    private void ContinueLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ContinueLabel1MouseClicked
        // TODO add your handling code here:
        startWork();        
    }//GEN-LAST:event_ContinueLabel1MouseClicked

    private void ForgotPasswordLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ForgotPasswordLabelMouseEntered
        // TODO add your handling code here:
        ForgotPasswordLabel.setFont(new Font("Arial", Font.BOLD, 16));
    }//GEN-LAST:event_ForgotPasswordLabelMouseEntered

    private void ForgotPasswordLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ForgotPasswordLabelMouseExited
        // TODO add your handling code here:
        ForgotPasswordLabel.setFont(new Font("Arial", Font.PLAIN, 14));
    }//GEN-LAST:event_ForgotPasswordLabelMouseExited

    private void ForgotPasswordLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ForgotPasswordLabelMouseClicked
        // TODO add your handling code here:
        PasswordDialog.setVisible(true);
        PasswordDialog.toFront();
        PasswordDialog.pack();
        EmailField.requestFocusInWindow();
    }//GEN-LAST:event_ForgotPasswordLabelMouseClicked

    private void FTF1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FTF1KeyTyped
        // TODO add your handling code here:
        if(FTF1.getText().length() < 1){
            char c = evt.getKeyChar();
            if (!((c >= '0') && (c <= '9') || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) {
                showInstruction();
                getToolkit().beep();
                evt.consume();
            }else {
                FTF2.requestFocusInWindow();
            }
        }else{
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_FTF1KeyTyped

    private void FTF2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FTF2KeyTyped
        // TODO add your handling code here:
        if(FTF2.getText().length() < 1){
            char c = evt.getKeyChar();
            if (!((c >= '0') && (c <= '9') || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) {
                showInstruction();
                getToolkit().beep();
                evt.consume();
            }else {
                FTF3.requestFocusInWindow();
            }
        }else{
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_FTF2KeyTyped

    private void FTF3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FTF3KeyTyped
        // TODO add your handling code here:
        if(FTF3.getText().length() < 1){
            char c = evt.getKeyChar();
            if (!((c >= '0') && (c <= '9') || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) {
                showInstruction();
                getToolkit().beep();
                evt.consume();
            }else {
                FTF4.requestFocusInWindow();
            }
        }else{
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_FTF3KeyTyped

    private void FTF4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FTF4KeyTyped
        // TODO add your handling code here:
        if(FTF4.getText().length() < 1){
            char c = evt.getKeyChar();
            if (!((c >= '0') && (c <= '9') || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) {
                showInstruction();
                getToolkit().beep();
                evt.consume();
            }else {
                FTF5.requestFocusInWindow();
            }
        }else{
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_FTF4KeyTyped

    private void FTF5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FTF5KeyTyped
        // TODO add your handling code here:
        if(FTF5.getText().length() < 1){
            char c = evt.getKeyChar();
            if (!((c >= '0') && (c <= '9') || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) {
                showInstruction();
                getToolkit().beep();
                evt.consume();
            }else {
                FTF6.requestFocusInWindow();
            }
        }else{
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_FTF5KeyTyped

    private void FTF6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FTF6KeyTyped
        // TODO add your handling code here:
        if(FTF6.getText().length() < 1){
            char c = evt.getKeyChar();
            if (!((c >= '0') && (c <= '9') || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) {
                showInstruction();
                getToolkit().beep();
                evt.consume();
            }
        }else{
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_FTF6KeyTyped

    private void ContinueLabel2ContinueIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ContinueLabel2ContinueIconMouseClicked
        // TODO add your handling code here:
        verifyOTP();
    }//GEN-LAST:event_ContinueLabel2ContinueIconMouseClicked

    private void CancelLabel2ContinueIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CancelLabel2ContinueIconMouseClicked
        // TODO add your handling code here:
        EmailField.requestFocusInWindow();
        clearAll();
        CardLayout cardLayout = (CardLayout) Panel2.getLayout();
        cardLayout.show(Panel2, "1");
    }//GEN-LAST:event_CancelLabel2ContinueIconMouseClicked

    private void ResendLabelContinueIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ResendLabelContinueIconMouseClicked
        // TODO add your handling code here:
        showSent();
        sendOTP(EmailField.getText().trim().toLowerCase());
    }//GEN-LAST:event_ResendLabelContinueIconMouseClicked

    private void ClearLabelContinueIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ClearLabelContinueIconMouseClicked
        // TODO add your handling code here:
        clearAll();
    }//GEN-LAST:event_ClearLabelContinueIconMouseClicked

    private void ViewPassword1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ViewPassword1MouseClicked
        // TODO add your handling code here:
        if(view1 == 0){
            PasswordField1.setEchoChar((char) 0);
            ViewPassword1.setBackground(LightGray);
            view1 = 1;
        }else if(view1 == 1){
            PasswordField1.setEchoChar('*');
            ViewPassword1.setBackground(Color.WHITE);
            view1 = 0;
        }
    }//GEN-LAST:event_ViewPassword1MouseClicked

    private void ViewPassword2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ViewPassword2MouseClicked
        // TODO add your handling code here:
        if(view2 == 0){
            PasswordField2.setEchoChar((char) 0);
            ViewPassword2.setBackground(LightGray);
            view2 = 1;
        }else if(view2 == 1){
            PasswordField2.setEchoChar('*');
            ViewPassword2.setBackground(Color.WHITE);
            view2 = 0;
        }
    }//GEN-LAST:event_ViewPassword2MouseClicked

    private void CancelLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CancelLabel3MouseClicked
        // TODO add your handling code here:
        EmailField.requestFocusInWindow();
        CardLayout cardLayout = (CardLayout) Panel2.getLayout();
        cardLayout.show(Panel2, "1");
        clearAll();
    }//GEN-LAST:event_CancelLabel3MouseClicked

    private void SaveChangesLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SaveChangesLabelMouseClicked
        // TODO add your handling code here:
        if(checkPasswords()){
            String passcode = new String(PasswordField1.getPassword());
            Database.updatePasscode(email, passcode);
            
            //Password changed Dialog Box:
            JLabel label = new JLabel("Password changed successfully.");
            label.setFont(new Font("Arial", Font.BOLD, 15));
            String title = "Success";
            JOptionPane.showMessageDialog(null, label, title,
                                    JOptionPane.INFORMATION_MESSAGE, passwordUpdated);
            
            PasswordDialog.dispose();
            clearEverything();
        }
        
    }//GEN-LAST:event_SaveChangesLabelMouseClicked

    private void PasswordField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PasswordField1KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            PasswordField2.requestFocusInWindow();
        }
    }//GEN-LAST:event_PasswordField1KeyPressed

    private void EmailFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EmailFieldKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            startWork();
        }
    }//GEN-LAST:event_EmailFieldKeyPressed

    private void FTF6KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FTF6KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            verifyOTP();
        }
       
    }//GEN-LAST:event_FTF6KeyPressed

    private void ViewPasswordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ViewPasswordMouseClicked
        // TODO add your handling code here:
        if(view == 0){
            Password.setEchoChar((char) 0);
            ViewPassword.setBackground(LightGray);
            view = 1;
        }else if(view == 1){
            Password.setEchoChar('*');
            ViewPassword.setBackground(Color.WHITE);
            view = 0;
        }
    }//GEN-LAST:event_ViewPasswordMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Animation;
    private javax.swing.JLabel Background;
    private javax.swing.JLabel CancelLabel1;
    private javax.swing.JLabel CancelLabel2;
    private javax.swing.JLabel CancelLabel3;
    private javax.swing.JLabel ClearLabel;
    private javax.swing.JLabel ContinueLabel1;
    private javax.swing.JLabel ContinueLabel2;
    private javax.swing.JPanel DPanel1;
    private javax.swing.JPanel DPanel2;
    private javax.swing.JPanel DPanel3;
    private javax.swing.JTextField Email;
    private javax.swing.JTextField EmailField;
    private javax.swing.JLabel EmailLabel;
    private javax.swing.JButton Exit;
    private javax.swing.JFormattedTextField FTF1;
    private javax.swing.JFormattedTextField FTF2;
    private javax.swing.JFormattedTextField FTF3;
    private javax.swing.JFormattedTextField FTF4;
    private javax.swing.JFormattedTextField FTF5;
    private javax.swing.JFormattedTextField FTF6;
    private javax.swing.JLabel FaceLabel;
    private javax.swing.JLabel ForgotPasswordLabel;
    private javax.swing.JLabel ForgotYourPasswordLabel;
    private javax.swing.JLabel Header1;
    private javax.swing.JLabel Header2;
    private javax.swing.JLabel Header3;
    private javax.swing.JLabel Instruction1;
    private javax.swing.JLabel Instruction2;
    private javax.swing.JLabel Instruction3;
    private javax.swing.JLabel Instruction4;
    private javax.swing.JLabel Instruction5;
    private javax.swing.JLabel InstructionLabel;
    private javax.swing.JSeparator MUnderline1;
    private javax.swing.JSeparator MUnderline2;
    private javax.swing.JDialog NoInternetD;
    private javax.swing.JPanel Panel1;
    private javax.swing.JPanel Panel2;
    private javax.swing.JPasswordField Password;
    private javax.swing.JDialog PasswordDialog;
    private javax.swing.JPasswordField PasswordField1;
    private javax.swing.JPasswordField PasswordField2;
    private javax.swing.JLabel PasswordLabel;
    private javax.swing.JLabel PasswordLabel1;
    private javax.swing.JLabel PasswordLabel2;
    private javax.swing.JLabel ResendLabel;
    private javax.swing.JLabel ResetPasswordLabel;
    private javax.swing.JLabel SaveChangesLabel;
    private javax.swing.JSeparator U1;
    private javax.swing.JSeparator U2;
    private javax.swing.JSeparator U3;
    private javax.swing.JSeparator U4;
    private javax.swing.JSeparator U5;
    private javax.swing.JSeparator U6;
    private javax.swing.JSeparator Underline1;
    private javax.swing.JSeparator Underline2;
    private javax.swing.JSeparator Underline3;
    private javax.swing.JLabel UsernameLabel;
    private javax.swing.JLabel VerificationLabel;
    private javax.swing.JLabel ViewPassword;
    private javax.swing.JLabel ViewPassword1;
    private javax.swing.JLabel ViewPassword2;
    // End of variables declaration//GEN-END:variables

    
    private void myinitComponents(String e) {
        Animation.setVisible(false);
        this.setIconImage(bufferedImage);
        this.setTitle("Login Window");
        if(!e.equals("")){
            Email.setText(e);
            EmailField.setText(e);
        }
        Exit.setBackground(new java.awt.Color(0,0,0,0));
        Email.setBackground(new java.awt.Color(0,0,0,0));
        Password.setBackground(new java.awt.Color(0,0,0,0));
        Instruction5.setVisible(false);
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2,dim.height/2-this.getSize().height/2);
        this.setLocationRelativeTo(null);
        PasswordDialog.setLocation(dim.width/2-this.getSize().width/2,dim.height/2-this.getSize().height/2);
        PasswordDialog.setLocationRelativeTo(null);
        
        this.setBackground(new Color(0,0,0,0));
        Panel1.setBackground(new Color(0,0,0,0));
        ViewPassword.setBackground(Color.white);

    }
    
    private void login(String email, String password){
        email = email.trim();
        email = email.toLowerCase();
        if(email.isEmpty()){
            JLabel label = new JLabel("Email not entered. Please enter valid credentials.");
            label.setFont(new Font("Arial", Font.BOLD, 15));
            String title = "Error";
            JOptionPane.showMessageDialog(null, label, title,JOptionPane.WARNING_MESSAGE, warningIcon);
            return;
        }
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection connection = (Connection) DriverManager.getConnection(
                    "jdbc:mysql://localhost:3306/project8525?useSSL=false&characterEncoding=latin1", "root", "123456789");
            Statement stmt = connection.createStatement();
            ResultSet resultSet = stmt.executeQuery("select * from userdata where email ='" + email + "';");
            if (!resultSet.isBeforeFirst()) {   //Checking Empty Result Set.
                Email.setText("");
                Password.setText("");           
                JLabel label = new JLabel("User does not exists. Please enter valid credentials.");       
                label.setFont(new Font("Arial", Font.BOLD, 15));
                String title = "Error";
                JOptionPane.showMessageDialog(null, label, title, 
                        JOptionPane.WARNING_MESSAGE, errorIcon);
                
            }else{                              //Checking the corresponding password.
                while(resultSet.next()){   
                    if(resultSet.getString(3).equalsIgnoreCase(email) && resultSet.getString(4).equals(password)){
                        Animation.setVisible(true);
                        
                        JLabel label = new JLabel("Login Successfull.");       
                        label.setFont(new Font("Arial", Font.BOLD, 15));
                        String title = "Success";
                        JOptionPane.showMessageDialog(null, label, title,
                                JOptionPane.INFORMATION_MESSAGE, successIcon);
                        
                        if(Database.checkDetails(email)){
                            Final next = new Final(resultSet.getString(2), resultSet.getString(3), "");
                            next.setVisible(true);
                        }else{
                            Main main = new Main(resultSet.getString(2), resultSet.getString(3));
                            main.setVisible(true);
                        }
                        this.dispose();
                    }else{
                        Password.setText("");           
                        JLabel label = new JLabel("Incorrect Passsword. Login not Successfull.");       
                        label.setFont(new Font("Arial", Font.BOLD, 15));
                        String title = "Error";
                        JOptionPane.showMessageDialog(null, label, title,
                                JOptionPane.WARNING_MESSAGE, errorIcon);
                    }
                }
            }
            connection.close();
        }
        catch(Exception e) {
            System.out.println(e);
        }
    }

    private void showInstruction() {
        Instruction3.setText("Only numerical input allowed.");
        Timer timer = new Timer(2000,
                e -> Instruction3.setText("Please have patience, it may take a few moments."));
        timer.setRepeats(false);
        timer.start();    
    }
    
    private void showSent() {
         Instruction3.setText("New password sent to email.");
        Timer timer = new Timer(3000,
                e -> Instruction3.setText("Please have patience, it may take a few moments."));
        timer.setRepeats(false);
        timer.start();   
    }
    
    private void showInternet() {
        Instruction5.setVisible(true);
        Timer timer = new Timer(3000,
                e -> Instruction5.setVisible(false));
        timer.setRepeats(false);
        timer.start();    
    }
    
    private void clearAll() {
        FTF1.setText("");
        FTF2.setText("");
        FTF3.setText("");
        FTF4.setText("");
        FTF5.setText("");
        FTF6.setText("");
    }

    private void sendOTP(String email) {
                
        int icode = Database.getOTP();
        String code = Integer.toString(icode);
        OTP = code;
//        System.out.print(code);
        Mail.sendFMailOTP(email, code);
        
    }

    private void verifyOTP() {
        String code = "";
        code = code + FTF1.getText().trim();
        code = code + FTF2.getText().trim();
        code = code + FTF3.getText().trim();
        code = code + FTF4.getText().trim();
        code = code + FTF5.getText().trim();
        code = code + FTF6.getText().trim();
        if(code.equals(OTP)){
            JLabel label = new JLabel("One time password verified successfully.");
            label.setFont(new Font("Arial", Font.BOLD, 15));
            String title = "Verification successfull";
            JOptionPane.showMessageDialog(null, label, title, JOptionPane.OK_OPTION, otpVerified);
            CardLayout cardLayout = (CardLayout) Panel2.getLayout();
            cardLayout.show(Panel2, "3");
            clearAll();
            PasswordField1.requestFocusInWindow();
        }else{
            clearAll();
            JLabel label = new JLabel("Incorrect one time password verified successfully.");
            label.setFont(new Font("Arial", Font.BOLD, 15));
            String title = "Verification Pending";
            JOptionPane.showMessageDialog(null, label, title, JOptionPane.OK_OPTION, errorIcon);
        }       
    }

    private void clearEverything() {
        EmailField.setText("");
        clearAll();
        PasswordField1.setText("");
        PasswordField2.setText("");
    }

    private boolean validateEmail(String mail) {
        if(mail.isEmpty()){
            return false;
        }
        
        if(mail.contains("@")){
            if(mail.contains("@gmail.com") || mail.contains("@amity.edu") || mail.contains("@yahoo.com") ||
                    mail.contains("@outlook.com") || mail.contains("@icloud.com") || mail.contains("@orkut.com")){
                return true;
            }else{
                return false;
            }
        }else{
            return false;
        }

    }

    private boolean checkPasswords() {
        
        String pass1 = new String(PasswordField1.getPassword());
        String pass2 = new String(PasswordField2.getPassword());

        if(pass1.equals(pass2)){
            if(pass1.length() <= 7){
                JLabel label = new JLabel("Password entered is too short.");
                label.setFont(new Font("Arial", Font.BOLD, 15));
                String title = "Invalid Password";
                JOptionPane.showMessageDialog(null, label, title, JOptionPane.OK_OPTION, invalidPassword);
                return false;
            }else{
                return true;
            }
        }else{
            JLabel label = new JLabel("Passwords do not match.");
            label.setFont(new Font("Arial", Font.BOLD, 15));
            String title = "Password Mismatch";
            JOptionPane.showMessageDialog(null, label, title, JOptionPane.OK_OPTION, invalidPassword);
            return false;
        }
    }

    private void startWork() {
        String mail = EmailField.getText().trim().toLowerCase();
            email = mail;
            if(validateEmail(mail)){

                if(Database.checkInternet()){

                        if(Database.userExists(mail)){
                            sendOTP(EmailField.getText().trim().toLowerCase());
                            CardLayout cardLayout = (CardLayout) Panel2.getLayout();
                            cardLayout.show(Panel2, "2");
                            FTF1.requestFocusInWindow();

                        }else{

                            JLabel label = new JLabel("Sorry, we couldn't find an account with that email.");
                            label.setFont(new Font("Arial", Font.BOLD, 15));
                            String title = "Error";
                            JOptionPane.showMessageDialog(null, label, title,
                                    JOptionPane.WARNING_MESSAGE, noEmailFoundIcon);

                        }

                }else{
                    
                    Thread t1 = new Thread() {
                        @Override
                        public void run() {
                            NoInternetD.setLayout(new BorderLayout());
                            NoInternetD.add(new NoInternet(2));    
                            NoInternetD.pack();
                            NoInternetD.setLocationRelativeTo(null);
                            NoInternetD.setVisible(true);
                            NoInternetD.toFront();
                        }

                        @Override
                        public void interrupt() {
                            NoInternetD.setVisible(true);
                            NoInternetD.dispose();
                            showInternet();
                            super.interrupt();
                        }
                    };
                    t1.setPriority(Thread.MIN_PRIORITY);
                    
                    Timer timer = new Timer(11600,
                                    e -> t1.interrupt());
                    timer.setRepeats(false);
                    t1.start();
                    timer.start(); 

                }
            }else{

                JLabel label = new JLabel("Empty/Invalid e-mail entered. Please verify email");
                label.setFont(new Font("Arial", Font.BOLD, 15));
                String title = "Error";
                JOptionPane.showMessageDialog(null, label, title, JOptionPane.WARNING_MESSAGE, warningIcon);
                
            }
    }

    private void tryLogin(String username, String passcode) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
